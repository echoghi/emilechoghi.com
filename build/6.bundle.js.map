{"version":3,"sources":["../node_modules/react-flip-toolkit/es/flip/animateUnflippedElements/index.js","../node_modules/rematrix/dist/rematrix.es.js","../node_modules/react-flip-toolkit/es/utilities.js","../node_modules/react-flip-toolkit/es/springSettings/index.js","../node_modules/react-flip-toolkit/es/constants.js","../node_modules/react-flip-toolkit/es/flip/animateFlippedElements/filterFlipDescendants.js","../node_modules/react-flip-toolkit/es/forked-rebound/onFrame.js","../node_modules/react-flip-toolkit/es/forked-rebound/util.js","../node_modules/react-flip-toolkit/es/forked-rebound/Loopers.js","../node_modules/react-flip-toolkit/es/forked-rebound/Spring.js","../node_modules/react-flip-toolkit/es/forked-rebound/SpringSystem.js","../node_modules/react-flip-toolkit/es/flip/animateFlippedElements/spring.js","../node_modules/react-flip-toolkit/es/flip/animateFlippedElements/initiateAnimations.js","../node_modules/react-flip-toolkit/es/flip/animateFlippedElements/index.js","../node_modules/react-flip-toolkit/es/flip/getFlippedElementPositions/index.js","../node_modules/react-flip-toolkit/es/flip/index.js","../node_modules/react-flip-toolkit/es/Flipper.js","../node_modules/react-flip-toolkit/es/Flipped.js","../node_modules/react-flip-toolkit/es/index.js"],"names":["flip_animateUnflippedElements","_ref","unflippedIds","flipCallbacks","getElement","newFlipChildrenPositions","cachedFlipChildrenPositions","inProgressAnimations","enteringElements","filter","id","exitingElementIds","onExit","closureResolve","promiseToReturn","Promise","resolve","reject","fragmentTuples","exitingElementCount","onExitCallbacks","map","i","_cachedFlipChildrenPo","domData","element","parent","_cachedFlipChildrenPo2","childPosition","top","left","width","height","getComputedStyle","position","style","transform","fragmentTuple","t","document","createDocumentFragment","push","appendChild","stop","removeChild","DOMException","forEach","fragment","length","hideEnteringElements","onAppear","opacity","animateEnteringElements","animateExitingElements","c","format","source","constructor","Array","TypeError","matrix","identity","RangeError","multiply","m","x","fm","fx","product","row","j","k","col","result","isNumber","isObject","Object","prototype","toString","call","toArray","arrayLike","slice","apply","utilities_assign","target","_len","arguments","args","_key","arg","nextKey","hasOwnProperty","springPresets","noWobble","stiffness","damping","gentle","veryGentle","wobbly","stiff","DATA_FLIP_ID","DATA_INVERSE_FLIP_ID","DATA_FLIP_CONFIG","DATA_PORTAL_KEY","filterFlipDescendants_selectFlipChildIds","scopedSelector","selector","flippedIds","childIds","el","dataset","flipId","indexOf","baseSelector","_onFrame","window","requestAnimationFrame","onFrame","callback","setTimeout","_typeof","Symbol","iterator","obj","start","Date","now","performanceNow","performance","removeFirst","array","item","idx","splice","Loopers_AnimationLooper","AnimationLooper","instance","Constructor","_classCallCheck","this","run","_this","springSystem","loop","Spring_classCallCheck","PhysicsState","velocity","Spring_Spring","Spring","_id","_ID","_springSystem","listeners","_startValue","_currentState","_displacementFromRestThreshold","_endValue","_overshootClampingEnabled","_previousState","_restSpeedThreshold","_tempState","_timeAccumulator","_wasAtRest","getId","destroy","deregisterSpring","setSpringConfig","springConfig","_springConfig","getCurrentValue","getDisplacementDistanceForState","state","Math","abs","setEndValue","endValue","isAtRest","activateSpring","len","onChange","onSpringEndStateChange","setVelocity","setOvershootClampingEnabled","enabled","isOvershooting","end","tension","advance","time","realDeltaTime","adjustedDeltaTime","MAX_DELTA_TIME_SEC","friction","tempPosition","tempVelocity","aVelocity","aAcceleration","bVelocity","bAcceleration","cVelocity","cAcceleration","dVelocity","dvdt","SOLVER_TIMESTEP_SEC","_interpolate","notifyActivate","notifyAtRest","notifyPositionUpdated","listener","onSpringActivate","onSpringUpdate","onSpringAtRest","systemShouldAdvance","wasAtRest","alpha","addListener","newListener","removeListener","listenerToRemove","forked_rebound_Spring","SpringSystem","looper","SpringSystem_classCallCheck","_activeSprings","_idleSpringIndices","_isIdle","_lastTimeMillis","_springRegistry","createSpring","createSpringWithConfig","spring","registerSpring","getIsIdle","deltaTime","pop","currentTimeMillis","ellapsedMillis","onBeforeIntegrate","onAfterIntegrate","springId","createSuspendedSpring","_ref$springConfig","overshootClamping","noOp","getOnUpdateFunc","onAnimationEnd","bind","initiateAnimations_initiateImmediateAnimations","initiateImmediateAnimations","immediate","flipped","createCallTree","flipDict","topLevelChildren","initiateStaggeredAnimations","tree","root","staggeredChildren","immediateChildren","childId","flipData","stagger","initiateAnimations","_ref2","staggerConfig","staggered","keys","staggerKey","flippedArray","undefined","reverse","normalizedSpeed","speed","max","min","nextThreshold","springFuncs","cachedGetOnUpdate","onUpdate","currentValue","staggeredSprings","convertMatrix3dArrayTo2dArray","index","rectInViewport","_ref5","bottom","right","innerHeight","innerWidth","tweenProp","flip_animateFlippedElements","_ref6","applyTransformOrigin","debug","decisionData","body","querySelector","flipCompletedPromise","withInitFuncs","completedAnimationIds","console","error","duplicateFlipIds","reduce","acc","curr","val","join","flipDataArray","prevRect","rect","currentRect","prevOpacity","currentOpacity","needsForcedMinVals","flipConfig","JSON","parse","flipperSpring","flippedSpring","normalizeSpring","springSettings_getSpringConfig","toReturn","shouldFlip","prev","current","distance","currentTransform","match","split","parseFloat","toVals","fromVals","transformsArray","translate","translateY","scale","scalar","scaleX","scaleY","invertedChildren","shouldInvert","querySelectorAll","animateFlippedElements_getInvertedChildren","applyStyles","_ref3","_ref4","forceMinVals","minHeight","minWidth","stringTransform","convertMatrix2dArrayToString","child","childFlipConfig","contains","translateX","inverseVals","transformString","invertTransformsForChildren","animateFlippedElements_createApplyStylesFunc","onComplete","cachedOnComplete","animateOpacity","onStartCalled","onStart","vals","fromVal","initializeFlip","transformOrigin","_ref7","_ref8","Boolean","_ref9","levelToChildren","buildHierarchy","level","oldResult","newSelector","newResult","oldLevelChildren","data","filterFlipDescendants","getFlippedElementPositions_addTupleToObject","_assign","getFlippedElementPositions_getAllElements","portalKey","getFlippedElementPositions_getFlippedElementPositionsBeforeUpdate","_ref$flipCallbacks","_ref$inProgressAnimat","flippedElements","inverseFlippedElements","childIdsToParentBCRs","parentBCRs","childIdsToParents","parentNode","closest","exitContainer","bcrIndex","findIndex","n","getBoundingClientRect","flippedElementPositions","childBCR","parentBCR","cancelInProgressAnimations","concat","cachedOrderedFlipIds","flip_createScopedSelector","es_flip","_ref$cachedOrderedFli","_ref$cachedFlipChildr","containerEl","_ref$staggerConfig","_ref$decisionData","handleEnterUpdateDelete","computedStyle","getFlippedElementPositionsAfterUpdate","flip_createGetElementFunc","isFlipped","baseArgs","_animateUnflippedElem","animateFlippedElementsArgs","flip","animateFlippedElements","then","FlipContext","react","PortalContext","Flipper_Flipper","_Component","Flipper","props","Flipper_classCallCheck","self","ReferenceError","_possibleConstructorReturn","subClass","superClass","create","value","enumerable","writable","configurable","setPrototypeOf","__proto__","_inherits","getSnapshotBeforeUpdate","prevProps","flipKey","componentDidUpdate","prevState","cachedData","render","_this2","_props","className","Element","react_default","a","createElement","Provider","ref","children","propTypes","defaultProps","es_Flipper","_extends","assign","key","_objectWithoutProperties","prop_types_default","oneOfType","node","func","isRequired","bool","string","object","Flipped","_dataAttributes","inverseFlipId","rest","isFunctionAsChildren","only","e","Error","dataAttributes","stringify","Flipped_FlippedWithContext","FlippedWithContext","Flipped_classCallCheck","Flipped_possibleConstructorReturn","Flipped_inherits","Consumer","es_Flipped","__webpack_require__","d","__webpack_exports__"],"mappings":"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","file":"6.bundle.js","sourcesContent":["var animateUnflippedElements = function animateUnflippedElements(_ref) {\n  var unflippedIds = _ref.unflippedIds,\n      flipCallbacks = _ref.flipCallbacks,\n      getElement = _ref.getElement,\n      newFlipChildrenPositions = _ref.newFlipChildrenPositions,\n      cachedFlipChildrenPositions = _ref.cachedFlipChildrenPositions,\n      inProgressAnimations = _ref.inProgressAnimations;\n\n  var enteringElements = unflippedIds.filter(function (id) {\n    return newFlipChildrenPositions[id] && flipCallbacks[id];\n  });\n\n  var exitingElementIds = unflippedIds.filter(function (id) {\n    return cachedFlipChildrenPositions[id] && flipCallbacks[id] && flipCallbacks[id].onExit;\n  });\n\n  var hideEnteringElements = function hideEnteringElements() {\n    enteringElements.forEach(function (id) {\n      if (flipCallbacks[id] && flipCallbacks[id].onAppear) {\n        var element = getElement(id);\n        element.style.opacity = \"0\";\n      }\n    });\n  };\n\n  var animateEnteringElements = function animateEnteringElements() {\n    enteringElements.forEach(function (id, i) {\n      var element = getElement(id);\n      if (flipCallbacks[id] && flipCallbacks[id].onAppear) flipCallbacks[id].onAppear(element, i);\n    });\n  };\n\n  var closureResolve = void 0;\n\n  var promiseToReturn = new Promise(function (resolve, reject) {\n    closureResolve = resolve;\n  });\n\n  var fragmentTuples = [];\n  var exitingElementCount = 0;\n\n  var onExitCallbacks = exitingElementIds.map(function (id, i) {\n    var _cachedFlipChildrenPo = cachedFlipChildrenPositions[id].domData,\n        element = _cachedFlipChildrenPo.element,\n        parent = _cachedFlipChildrenPo.parent,\n        _cachedFlipChildrenPo2 = _cachedFlipChildrenPo.childPosition,\n        top = _cachedFlipChildrenPo2.top,\n        left = _cachedFlipChildrenPo2.left,\n        width = _cachedFlipChildrenPo2.width,\n        height = _cachedFlipChildrenPo2.height;\n    // insert back into dom\n\n    if (getComputedStyle(parent).position === \"static\") {\n      parent.style.position = \"relative\";\n    }\n    element.style.transform = \"matrix(1, 0, 0, 1, 0, 0)\";\n    element.style.position = \"absolute\";\n    element.style.top = top + \"px\";\n    element.style.left = left + \"px\";\n    // taken out of the dom flow, the element might have lost these dimensions\n    element.style.height = height + \"px\";\n    element.style.width = width + \"px\";\n    var fragmentTuple = fragmentTuples.filter(function (t) {\n      return t[0] === parent;\n    })[0];\n    if (!fragmentTuple) {\n      fragmentTuple = [parent, document.createDocumentFragment()];\n      fragmentTuples.push(fragmentTuple);\n    }\n    fragmentTuple[1].appendChild(element);\n\n    exitingElementCount += 1;\n\n    var stop = function stop() {\n      try {\n        parent.removeChild(element);\n        exitingElementCount -= 1;\n        if (exitingElementCount === 0) closureResolve();\n      } catch (DOMException) {\n        // the element is already gone\n      }\n    };\n    inProgressAnimations[id] = { stop: stop };\n    return function () {\n      return flipCallbacks[id].onExit(element, i, stop);\n    };\n  });\n\n  // now append all the fragments from the onExit callbacks\n  // (we use fragments for performance)\n  fragmentTuples.forEach(function (t) {\n    var parent = t[0];\n    var fragment = t[1];\n    parent.appendChild(fragment);\n  });\n\n  if (!onExitCallbacks.length) closureResolve();\n\n  var animateExitingElements = function animateExitingElements() {\n    onExitCallbacks.forEach(function (c) {\n      return c();\n    });\n    return promiseToReturn;\n  };\n\n  return {\n    hideEnteringElements: hideEnteringElements,\n    animateEnteringElements: animateEnteringElements,\n    animateExitingElements: animateExitingElements\n  };\n};\n\nexport default animateUnflippedElements;","/*! @license Rematrix v0.2.3\n\n\tCopyright 2018 Fisssion LLC.\n\n\tPermission is hereby granted, free of charge, to any person obtaining a copy\n\tof this software and associated documentation files (the \"Software\"), to deal\n\tin the Software without restriction, including without limitation the rights\n\tto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\tcopies of the Software, and to permit persons to whom the Software is\n\tfurnished to do so, subject to the following conditions:\n\n\tThe above copyright notice and this permission notice shall be included in\n\tall copies or substantial portions of the Software.\n\n\tTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\tIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\tFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\tAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\tLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\tOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\tTHE SOFTWARE.\n*/\n/**\n * @module Rematrix\n */\n\n/**\n * Transformation matrices in the browser come in two flavors:\n *\n *  - `matrix` using 6 values (short)\n *  - `matrix3d` using 16 values (long)\n *\n * This utility follows this [conversion guide](https://goo.gl/EJlUQ1)\n * to expand short form matrices to their equivalent long form.\n *\n * @param  {array} source - Accepts both short and long form matrices.\n * @return {array}\n */\nfunction format(source) {\n\tif (source.constructor !== Array) {\n\t\tthrow new TypeError('Expected array.')\n\t}\n\tif (source.length === 16) {\n\t\treturn source\n\t}\n\tif (source.length === 6) {\n\t\tvar matrix = identity();\n\t\tmatrix[0] = source[0];\n\t\tmatrix[1] = source[1];\n\t\tmatrix[4] = source[2];\n\t\tmatrix[5] = source[3];\n\t\tmatrix[12] = source[4];\n\t\tmatrix[13] = source[5];\n\t\treturn matrix\n\t}\n\tthrow new RangeError('Expected array with either 6 or 16 values.')\n}\n\n/**\n * Returns a matrix representing no transformation. The product of any matrix\n * multiplied by the identity matrix will be the original matrix.\n *\n * > **Tip:** Similar to how `5 * 1 === 5`, where `1` is the identity.\n *\n * @return {array}\n */\nfunction identity() {\n\tvar matrix = [];\n\tfor (var i = 0; i < 16; i++) {\n\t\ti % 5 == 0 ? matrix.push(1) : matrix.push(0);\n\t}\n\treturn matrix\n}\n\n/**\n * Returns a matrix describing the inverse transformation of the source\n * matrix. The product of any matrix multiplied by its inverse will be the\n * identity matrix.\n *\n * > **Tip:** Similar to how `5 * (1/5) === 1`, where `1/5` is the inverse.\n *\n * @param  {array} source - Accepts both short and long form matrices.\n * @return {array}\n */\nfunction inverse(source) {\n\tvar m = format(source);\n\n\tvar s0 = m[0] * m[5] - m[4] * m[1];\n\tvar s1 = m[0] * m[6] - m[4] * m[2];\n\tvar s2 = m[0] * m[7] - m[4] * m[3];\n\tvar s3 = m[1] * m[6] - m[5] * m[2];\n\tvar s4 = m[1] * m[7] - m[5] * m[3];\n\tvar s5 = m[2] * m[7] - m[6] * m[3];\n\n\tvar c5 = m[10] * m[15] - m[14] * m[11];\n\tvar c4 = m[9] * m[15] - m[13] * m[11];\n\tvar c3 = m[9] * m[14] - m[13] * m[10];\n\tvar c2 = m[8] * m[15] - m[12] * m[11];\n\tvar c1 = m[8] * m[14] - m[12] * m[10];\n\tvar c0 = m[8] * m[13] - m[12] * m[9];\n\n\tvar determinant = 1 / (s0 * c5 - s1 * c4 + s2 * c3 + s3 * c2 - s4 * c1 + s5 * c0);\n\n\tif (isNaN(determinant) || determinant === Infinity) {\n\t\tthrow new Error('Inverse determinant attempted to divide by zero.')\n\t}\n\n\treturn [\n\t\t(m[5] * c5 - m[6] * c4 + m[7] * c3) * determinant,\n\t\t(-m[1] * c5 + m[2] * c4 - m[3] * c3) * determinant,\n\t\t(m[13] * s5 - m[14] * s4 + m[15] * s3) * determinant,\n\t\t(-m[9] * s5 + m[10] * s4 - m[11] * s3) * determinant,\n\n\t\t(-m[4] * c5 + m[6] * c2 - m[7] * c1) * determinant,\n\t\t(m[0] * c5 - m[2] * c2 + m[3] * c1) * determinant,\n\t\t(-m[12] * s5 + m[14] * s2 - m[15] * s1) * determinant,\n\t\t(m[8] * s5 - m[10] * s2 + m[11] * s1) * determinant,\n\n\t\t(m[4] * c4 - m[5] * c2 + m[7] * c0) * determinant,\n\t\t(-m[0] * c4 + m[1] * c2 - m[3] * c0) * determinant,\n\t\t(m[12] * s4 - m[13] * s2 + m[15] * s0) * determinant,\n\t\t(-m[8] * s4 + m[9] * s2 - m[11] * s0) * determinant,\n\n\t\t(-m[4] * c3 + m[5] * c1 - m[6] * c0) * determinant,\n\t\t(m[0] * c3 - m[1] * c1 + m[2] * c0) * determinant,\n\t\t(-m[12] * s3 + m[13] * s1 - m[14] * s0) * determinant,\n\t\t(m[8] * s3 - m[9] * s1 + m[10] * s0) * determinant\n\t]\n}\n\n/**\n * Returns a 4x4 matrix describing the combined transformations\n * of both arguments.\n *\n * > **Note:** Order is very important. For example, rotating 45°\n * along the Z-axis, followed by translating 500 pixels along the\n * Y-axis... is not the same as translating 500 pixels along the\n * Y-axis, followed by rotating 45° along on the Z-axis.\n *\n * @param  {array} m - Accepts both short and long form matrices.\n * @param  {array} x - Accepts both short and long form matrices.\n * @return {array}\n */\nfunction multiply(m, x) {\n\tvar fm = format(m);\n\tvar fx = format(x);\n\tvar product = [];\n\n\tfor (var i = 0; i < 4; i++) {\n\t\tvar row = [fm[i], fm[i + 4], fm[i + 8], fm[i + 12]];\n\t\tfor (var j = 0; j < 4; j++) {\n\t\t\tvar k = j * 4;\n\t\t\tvar col = [fx[k], fx[k + 1], fx[k + 2], fx[k + 3]];\n\t\t\tvar result =\n\t\t\t\trow[0] * col[0] + row[1] * col[1] + row[2] * col[2] + row[3] * col[3];\n\n\t\t\tproduct[i + k] = result;\n\t\t}\n\t}\n\n\treturn product\n}\n\n/**\n * Attempts to return a 4x4 matrix describing the CSS transform\n * matrix passed in, but will return the identity matrix as a\n * fallback.\n *\n * **Tip:** In virtually all cases, this method is used to convert\n * a CSS matrix (retrieved as a `string` from computed styles) to\n * its equivalent array format.\n *\n * @param  {string} source - String containing a valid CSS `matrix` or `matrix3d` property.\n * @return {array}\n */\nfunction parse(source) {\n\tif (typeof source === 'string') {\n\t\tvar match = source.match(/matrix(3d)?\\(([^)]+)\\)/);\n\t\tif (match) {\n\t\t\tvar raw = match[2].split(', ').map(parseFloat);\n\t\t\treturn format(raw)\n\t\t}\n\t}\n\treturn identity()\n}\n\n/**\n * Returns a 4x4 matrix describing Z-axis rotation.\n *\n * @param  {number} angle - Measured in degrees.\n * @return {array}\n */\nfunction rotate(angle) {\n\treturn rotateZ(angle)\n}\n\n/**\n * Returns a 4x4 matrix describing X-axis rotation.\n *\n * @param  {number} angle - Measured in degrees.\n * @return {array}\n */\nfunction rotateX(angle) {\n\tvar theta = Math.PI / 180 * angle;\n\tvar matrix = identity();\n\n\tmatrix[5] = matrix[10] = Math.cos(theta);\n\tmatrix[6] = matrix[9] = Math.sin(theta);\n\tmatrix[9] *= -1;\n\n\treturn matrix\n}\n\n/**\n * Returns a 4x4 matrix describing Y-axis rotation.\n *\n * @param  {number} angle - Measured in degrees.\n * @return {array}\n */\nfunction rotateY(angle) {\n\tvar theta = Math.PI / 180 * angle;\n\tvar matrix = identity();\n\n\tmatrix[0] = matrix[10] = Math.cos(theta);\n\tmatrix[2] = matrix[8] = Math.sin(theta);\n\tmatrix[2] *= -1;\n\n\treturn matrix\n}\n\n/**\n * Returns a 4x4 matrix describing Z-axis rotation.\n *\n * @param  {number} angle - Measured in degrees.\n * @return {array}\n */\nfunction rotateZ(angle) {\n\tvar theta = Math.PI / 180 * angle;\n\tvar matrix = identity();\n\n\tmatrix[0] = matrix[5] = Math.cos(theta);\n\tmatrix[1] = matrix[4] = Math.sin(theta);\n\tmatrix[4] *= -1;\n\n\treturn matrix\n}\n\n/**\n * Returns a 4x4 matrix describing 2D scaling. The first argument\n * is used for both X and Y-axis scaling, unless an optional\n * second argument is provided to explicitly define Y-axis scaling.\n *\n * @param  {number} scalar    - Decimal multiplier.\n * @param  {number} [scalarY] - Decimal multiplier.\n * @return {array}\n */\nfunction scale(scalar, scalarY) {\n\tvar matrix = identity();\n\n\tmatrix[0] = scalar;\n\tmatrix[5] = typeof scalarY === 'number' ? scalarY : scalar;\n\n\treturn matrix\n}\n\n/**\n * Returns a 4x4 matrix describing X-axis scaling.\n *\n * @param  {number} scalar - Decimal multiplier.\n * @return {array}\n */\nfunction scaleX(scalar) {\n\tvar matrix = identity();\n\tmatrix[0] = scalar;\n\treturn matrix\n}\n\n/**\n * Returns a 4x4 matrix describing Y-axis scaling.\n *\n * @param  {number} scalar - Decimal multiplier.\n * @return {array}\n */\nfunction scaleY(scalar) {\n\tvar matrix = identity();\n\tmatrix[5] = scalar;\n\treturn matrix\n}\n\n/**\n * Returns a 4x4 matrix describing Z-axis scaling.\n *\n * @param  {number} scalar - Decimal multiplier.\n * @return {array}\n */\nfunction scaleZ(scalar) {\n\tvar matrix = identity();\n\tmatrix[10] = scalar;\n\treturn matrix\n}\n\n/**\n * Returns a 4x4 matrix describing shear. The first argument\n * defines X-axis shearing, and an optional second argument\n * defines Y-axis shearing.\n *\n * @param  {number} angleX   - Measured in degrees.\n * @param  {number} [angleY] - Measured in degrees.\n * @return {array}\n */\nfunction skew(angleX, angleY) {\n\tvar thetaX = Math.PI / 180 * angleX;\n\tvar matrix = identity();\n\n\tmatrix[4] = Math.tan(thetaX);\n\n\tif (angleY) {\n\t\tvar thetaY = Math.PI / 180 * angleY;\n\t\tmatrix[1] = Math.tan(thetaY);\n\t}\n\n\treturn matrix\n}\n\n/**\n * Returns a 4x4 matrix describing X-axis shear.\n *\n * @param  {number} angle - Measured in degrees.\n * @return {array}\n */\nfunction skewX(angle) {\n\tvar theta = Math.PI / 180 * angle;\n\tvar matrix = identity();\n\n\tmatrix[4] = Math.tan(theta);\n\n\treturn matrix\n}\n\n/**\n * Returns a 4x4 matrix describing Y-axis shear.\n *\n * @param  {number} angle - Measured in degrees\n * @return {array}\n */\nfunction skewY(angle) {\n\tvar theta = Math.PI / 180 * angle;\n\tvar matrix = identity();\n\n\tmatrix[1] = Math.tan(theta);\n\n\treturn matrix\n}\n\n/**\n * Returns a 4x4 matrix describing 2D translation. The first\n * argument defines X-axis translation, and an optional second\n * argument defines Y-axis translation.\n *\n * @param  {number} distanceX   - Measured in pixels.\n * @param  {number} [distanceY] - Measured in pixels.\n * @return {array}\n */\nfunction translate(distanceX, distanceY) {\n\tvar matrix = identity();\n\tmatrix[12] = distanceX;\n\n\tif (distanceY) {\n\t\tmatrix[13] = distanceY;\n\t}\n\n\treturn matrix\n}\n\n/**\n * Returns a 4x4 matrix describing X-axis translation.\n *\n * @param  {number} distance - Measured in pixels.\n * @return {array}\n */\nfunction translateX(distance) {\n\tvar matrix = identity();\n\tmatrix[12] = distance;\n\treturn matrix\n}\n\n/**\n * Returns a 4x4 matrix describing Y-axis translation.\n *\n * @param  {number} distance - Measured in pixels.\n * @return {array}\n */\nfunction translateY(distance) {\n\tvar matrix = identity();\n\tmatrix[13] = distance;\n\treturn matrix\n}\n\n/**\n * Returns a 4x4 matrix describing Z-axis translation.\n *\n * @param  {number} distance - Measured in pixels.\n * @return {array}\n */\nfunction translateZ(distance) {\n\tvar matrix = identity();\n\tmatrix[14] = distance;\n\treturn matrix\n}\n\nexport { format, identity, inverse, multiply, parse, rotate, rotateX, rotateY, rotateZ, scale, scaleX, scaleY, scaleZ, skew, skewX, skewY, translate, translateX, translateY, translateZ };\n","export var isNumber = function isNumber(x) {\n  return typeof x === \"number\";\n};\n\nexport var isFunction = function isFunction(x) {\n  return typeof x === \"function\";\n};\n\nexport var isObject = function isObject(x) {\n  return Object.prototype.toString.call(x) === \"[object Object]\";\n};\n\nexport var toArray = function toArray(arrayLike) {\n  return Array.prototype.slice.apply(arrayLike);\n};\n\nexport var getDuplicateValsAsStrings = function getDuplicateValsAsStrings(arr) {\n  var obj = arr.reduce(function (acc, curr) {\n    acc[curr] = acc[curr] ? acc[curr] + 1 : 1;\n    return acc;\n  }, {});\n  return Object.keys(obj).filter(function (val) {\n    return obj[val] > 1;\n  });\n};\n\nexport var assign = function assign(target) {\n  for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n\n  args.forEach(function (arg) {\n    if (!arg) return;\n    // Skip over if undefined or null\n    for (var nextKey in arg) {\n      // Avoid bugs when hasOwnProperty is shadowed\n      if (Object.prototype.hasOwnProperty.call(arg, nextKey)) {\n        target[nextKey] = arg[nextKey];\n      }\n    }\n  });\n  return target;\n};","import { isObject, assign } from \"../utilities\";\n\n// adapted from\n// https://github.com/chenglou/react-motion/blob/master/src/presets.js\nexport var springPresets = {\n  noWobble: { stiffness: 200, damping: 26 },\n  gentle: { stiffness: 120, damping: 14 },\n  veryGentle: { stiffness: 130, damping: 17 },\n  wobbly: { stiffness: 180, damping: 12 },\n  stiff: { stiffness: 260, damping: 26 }\n};\n\nexport var getSpringConfig = function getSpringConfig() {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      flipperSpring = _ref.flipperSpring,\n      flippedSpring = _ref.flippedSpring;\n\n  var normalizeSpring = function normalizeSpring(spring) {\n    if (isObject(spring)) return spring;else if (springPresets[spring]) return springPresets[spring];else return {};\n  };\n\n  return assign({}, springPresets.noWobble, normalizeSpring(flipperSpring), normalizeSpring(flippedSpring));\n};","export var DATA_FLIP_ID = \"data-flip-id\";\nexport var DATA_INVERSE_FLIP_ID = \"data-inverse-flip-id\";\nexport var DATA_FLIP_COMPONENT_ID = \"data-flip-component-id\";\nexport var DATA_FLIP_CONFIG = \"data-flip-config\";\nexport var DATA_PORTAL_KEY = \"data-portal-key\";\nexport var DATA_EXIT_CONTAINER = \"data-exit-container\";","import { toArray } from \"../../utilities\";\nimport * as constants from \"../../constants\";\n\n// scoped selector makes sure we're querying inside the right Flipper\n// container, either internally or with the right portal key\nvar selectFlipChildIds = function selectFlipChildIds(scopedSelector, selector, flippedIds) {\n  var childIds = toArray(scopedSelector(selector)).map(function (el) {\n    return el.dataset.flipId;\n  });\n  // now return an array ordered by the original order in the DOM\n  return flippedIds.filter(function (id) {\n    return childIds.indexOf(id) > -1;\n  });\n};\n\nvar baseSelector = \"[\" + constants.DATA_FLIP_ID + \"]\";\n\nexport default (function (_ref) {\n  var flipDict = _ref.flipDict,\n      flippedIds = _ref.flippedIds,\n      scopedSelector = _ref.scopedSelector;\n\n  var levelToChildren = {};\n\n  var buildHierarchy = function buildHierarchy(selector, level, oldResult) {\n    var newSelector = selector + \" \" + baseSelector;\n    // make sure this is scoped to the Flipper element in case there are\n    // mulitiple Flipper elements on the page\n    var newResult = selectFlipChildIds(scopedSelector, newSelector, flippedIds);\n\n    var oldLevelChildren = oldResult.filter(function (id) {\n      return newResult.indexOf(id) === -1;\n    });\n    levelToChildren[level] = oldLevelChildren;\n    oldLevelChildren.forEach(function (childId) {\n      if (flipDict[childId]) {\n        flipDict[childId].level = level;\n      }\n    });\n\n    if (newResult.length !== 0) buildHierarchy(newSelector, level + 1, newResult);\n  };\n\n  // the top level selectChildFlipIds should use the scopedSelector,\n  buildHierarchy(baseSelector, 0, selectFlipChildIds(scopedSelector, baseSelector, flippedIds));\n\n  // now make sure childIds in each flippedData contains only direct children\n  // since to enable nested stagger  we want each parent to be able to kick off\n  // the animations only for its direct children\n  Object.keys(flipDict).forEach(function (flipId) {\n    var data = flipDict[flipId];\n    // scop by parent element\n    data.childIds = selectFlipChildIds(function (selector) {\n      return data.element.querySelectorAll(selector);\n    }, baseSelector, flippedIds);\n\n    data.childIds = data.childIds.filter(function (id) {\n      return levelToChildren[data.level + 1] && levelToChildren[data.level + 1].indexOf(id) > -1;\n    });\n  });\n  return { topLevelChildren: levelToChildren[\"0\"] };\n});","/**\n *  Copyright (c) 2013, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n *\n *\n */\n\nvar _onFrame = void 0;\nif (typeof window !== \"undefined\") {\n  _onFrame = window.requestAnimationFrame;\n}\n\n_onFrame = _onFrame || function (callback) {\n  window.setTimeout(callback, 1000 / 60);\n};\n\nexport default _onFrame;","var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/**\n *  Copyright (c) 2013, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n *\n *\n */\n\nimport _onFrame from \"./onFrame\";\n\n// Cross browser/node timer functions.\nexport function onFrame(func) {\n  return _onFrame(func);\n}\n\nvar start = Date.now();\nexport var performanceNow = (typeof performance === \"undefined\" ? \"undefined\" : _typeof(performance)) === \"object\" && typeof performance.now === \"function\" ? function () {\n  return performance.now();\n} : function () {\n  return Date.now() - start;\n};\n\n// Lop off the first occurence of the reference in the Array.\nexport function removeFirst(array, item) {\n  var idx = array.indexOf(item);\n  idx !== -1 && array.splice(idx, 1);\n}","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n *  Copyright (c) 2013, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n *\n *\n */\n\nimport { onFrame, performanceNow } from \"./util\";\n\n/**\n * Plays each frame of the SpringSystem on animation\n * timing loop. This is the default type of looper for a new spring system\n * as it is the most common when developing UI.\n * @public\n */\nexport var AnimationLooper = function () {\n  function AnimationLooper() {\n    _classCallCheck(this, AnimationLooper);\n  }\n\n  AnimationLooper.prototype.run = function run() {\n    var _this = this;\n\n    onFrame(function () {\n      _this.springSystem.loop(performanceNow());\n    });\n  };\n\n  return AnimationLooper;\n}();","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n *  Copyright (c) 2013, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n *\n *\n */\n\nimport { removeFirst } from \"./util\";\n\nvar PhysicsState = function PhysicsState() {\n  _classCallCheck(this, PhysicsState);\n\n  this.position = 0;\n  this.velocity = 0;\n};\n\n/**\n * Provides a model of a classical spring acting to\n * resolve a body to equilibrium. Springs have configurable\n * tension which is a force multipler on the displacement of the\n * spring from its rest point or `endValue` as defined by [Hooke's\n * law](http://en.wikipedia.org/wiki/Hooke's_law). Springs also have\n * configurable friction, which ensures that they do not oscillate\n * infinitely. When a Spring is displaced by updating it's resting\n * or `currentValue`, the SpringSystems that contain that Spring\n * will automatically start looping to solve for equilibrium. As each\n * timestep passes, `SpringListener` objects attached to the Spring\n * will be notified of the updates providing a way to drive an\n * animation off of the spring's resolution curve.\n * @public\n */\n\n\nvar Spring = function () {\n  function Spring(springSystem) {\n    _classCallCheck(this, Spring);\n\n    this._id = \"s\" + Spring._ID++;\n    this._springSystem = springSystem;\n\n    this.listeners = [];\n    this._startValue = 0;\n\n    this._currentState = new PhysicsState();\n    this._displacementFromRestThreshold = 0.001;\n    this._endValue = 0;\n    this._overshootClampingEnabled = false;\n    this._previousState = new PhysicsState();\n    this._restSpeedThreshold = 0.001;\n\n    this._tempState = new PhysicsState();\n    this._timeAccumulator = 0;\n    this._wasAtRest = true;\n  }\n\n  Spring.prototype.getId = function getId() {\n    return this._id;\n  };\n\n  /**\n   * Remove a Spring from simulation and clear its listeners.\n   * @public\n   */\n\n\n  Spring.prototype.destroy = function destroy() {\n    this.listeners = [];\n    this._springSystem.deregisterSpring(this);\n  };\n\n  /**\n   * Set the configuration values for this Spring. A SpringConfig\n   * contains the tension and friction values used to solve for the\n   * equilibrium of the Spring in the physics loop.\n   * @public\n   */\n\n\n  Spring.prototype.setSpringConfig = function setSpringConfig(springConfig) {\n    this._springConfig = springConfig;\n    return this;\n  };\n  /**\n   * Retrieve the current value of the Spring.\n   * @public\n   */\n\n\n  Spring.prototype.getCurrentValue = function getCurrentValue() {\n    return this._currentState.position;\n  };\n\n  /**\n   * Get the absolute distance of the Spring from a given state value\n   */\n\n\n  Spring.prototype.getDisplacementDistanceForState = function getDisplacementDistanceForState(state) {\n    return Math.abs(this._endValue - state.position);\n  };\n\n  /**\n   * Set the endValue or resting position of the spring. If this\n   * value is different than the current value, the SpringSystem will\n   * be notified and will begin running its solver loop to resolve\n   * the Spring to equilibrium. Any listeners that are registered\n   * for onSpringEndStateChange will also be notified of this update\n   * immediately.\n   * @public\n   */\n\n\n  Spring.prototype.setEndValue = function setEndValue(endValue) {\n    if (this._endValue === endValue && this.isAtRest()) {\n      return this;\n    }\n    this._startValue = this.getCurrentValue();\n    this._endValue = endValue;\n    this._springSystem.activateSpring(this.getId());\n    for (var i = 0, len = this.listeners.length; i < len; i++) {\n      var listener = this.listeners[i];\n      var onChange = listener.onSpringEndStateChange;\n      onChange && onChange(this);\n    }\n    return this;\n  };\n\n  /**\n   * Set the current velocity of the Spring, in pixels per second. As\n   * previously mentioned, this can be useful when you are performing\n   * a direct manipulation gesture. When a UI element is released you\n   * may call setVelocity on its animation Spring so that the Spring\n   * continues with the same velocity as the gesture ended with. The\n   * friction, tension, and displacement of the Spring will then\n   * govern its motion to return to rest on a natural feeling curve.\n   * @public\n   */\n\n\n  Spring.prototype.setVelocity = function setVelocity(velocity) {\n    if (velocity === this._currentState.velocity) {\n      return this;\n    }\n    this._currentState.velocity = velocity;\n    this._springSystem.activateSpring(this.getId());\n    return this;\n  };\n\n  /**\n   * Enable overshoot clamping. This means that the Spring will stop\n   * immediately when it reaches its resting position regardless of\n   * any existing momentum it may have. This can be useful for certain\n   * types of animations that should not oscillate such as a scale\n   * down to 0 or alpha fade.\n   * @public\n   */\n\n\n  Spring.prototype.setOvershootClampingEnabled = function setOvershootClampingEnabled(enabled) {\n    this._overshootClampingEnabled = enabled;\n    return this;\n  };\n\n  /**\n   * Check if the Spring has gone past its end point by comparing\n   * the direction it was moving in when it started to the current\n   * position and end value.\n   * @public\n   */\n\n\n  Spring.prototype.isOvershooting = function isOvershooting() {\n    var start = this._startValue;\n    var end = this._endValue;\n    return this._springConfig.tension > 0 && (start < end && this.getCurrentValue() > end || start > end && this.getCurrentValue() < end);\n  };\n\n  /**\n   * The main solver method for the Spring. It takes\n   * the current time and delta since the last time step and performs\n   * an RK4 integration to get the new position and velocity state\n   * for the Spring based on the tension, friction, velocity, and\n   * displacement of the Spring.\n   * @public\n   */\n\n\n  Spring.prototype.advance = function advance(time, realDeltaTime) {\n    var isAtRest = this.isAtRest();\n\n    if (isAtRest && this._wasAtRest) {\n      return;\n    }\n\n    var adjustedDeltaTime = realDeltaTime;\n    if (realDeltaTime > Spring.MAX_DELTA_TIME_SEC) {\n      adjustedDeltaTime = Spring.MAX_DELTA_TIME_SEC;\n    }\n\n    this._timeAccumulator += adjustedDeltaTime;\n\n    var tension = this._springConfig.tension;\n    var friction = this._springConfig.friction;\n    var position = this._currentState.position;\n    var velocity = this._currentState.velocity;\n    var tempPosition = this._tempState.position;\n    var tempVelocity = this._tempState.velocity;\n    var aVelocity = void 0;\n    var aAcceleration = void 0;\n    var bVelocity = void 0;\n    var bAcceleration = void 0;\n    var cVelocity = void 0;\n    var cAcceleration = void 0;\n    var dVelocity = void 0;\n    var dAcceleration = void 0;\n    var dxdt = void 0;\n    var dvdt = void 0;\n\n    while (this._timeAccumulator >= Spring.SOLVER_TIMESTEP_SEC) {\n      this._timeAccumulator -= Spring.SOLVER_TIMESTEP_SEC;\n\n      if (this._timeAccumulator < Spring.SOLVER_TIMESTEP_SEC) {\n        this._previousState.position = position;\n        this._previousState.velocity = velocity;\n      }\n\n      aVelocity = velocity;\n      aAcceleration = tension * (this._endValue - tempPosition) - friction * velocity;\n\n      tempPosition = position + aVelocity * Spring.SOLVER_TIMESTEP_SEC * 0.5;\n      tempVelocity = velocity + aAcceleration * Spring.SOLVER_TIMESTEP_SEC * 0.5;\n      bVelocity = tempVelocity;\n      bAcceleration = tension * (this._endValue - tempPosition) - friction * tempVelocity;\n\n      tempPosition = position + bVelocity * Spring.SOLVER_TIMESTEP_SEC * 0.5;\n      tempVelocity = velocity + bAcceleration * Spring.SOLVER_TIMESTEP_SEC * 0.5;\n      cVelocity = tempVelocity;\n      cAcceleration = tension * (this._endValue - tempPosition) - friction * tempVelocity;\n\n      tempPosition = position + cVelocity * Spring.SOLVER_TIMESTEP_SEC;\n      tempVelocity = velocity + cAcceleration * Spring.SOLVER_TIMESTEP_SEC;\n      dVelocity = tempVelocity;\n      dAcceleration = tension * (this._endValue - tempPosition) - friction * tempVelocity;\n\n      dxdt = 1.0 / 6.0 * (aVelocity + 2.0 * (bVelocity + cVelocity) + dVelocity);\n      dvdt = 1.0 / 6.0 * (aAcceleration + 2.0 * (bAcceleration + cAcceleration) + dAcceleration);\n\n      position += dxdt * Spring.SOLVER_TIMESTEP_SEC;\n      velocity += dvdt * Spring.SOLVER_TIMESTEP_SEC;\n    }\n\n    this._tempState.position = tempPosition;\n    this._tempState.velocity = tempVelocity;\n\n    this._currentState.position = position;\n    this._currentState.velocity = velocity;\n\n    if (this._timeAccumulator > 0) {\n      this._interpolate(this._timeAccumulator / Spring.SOLVER_TIMESTEP_SEC);\n    }\n\n    if (this.isAtRest() || this._overshootClampingEnabled && this.isOvershooting()) {\n      if (this._springConfig.tension > 0) {\n        this._startValue = this._endValue;\n        this._currentState.position = this._endValue;\n      } else {\n        this._endValue = this._currentState.position;\n        this._startValue = this._endValue;\n      }\n      this.setVelocity(0);\n      isAtRest = true;\n    }\n\n    var notifyActivate = false;\n    if (this._wasAtRest) {\n      this._wasAtRest = false;\n      notifyActivate = true;\n    }\n\n    var notifyAtRest = false;\n    if (isAtRest) {\n      this._wasAtRest = true;\n      notifyAtRest = true;\n    }\n\n    this.notifyPositionUpdated(notifyActivate, notifyAtRest);\n  };\n\n  Spring.prototype.notifyPositionUpdated = function notifyPositionUpdated(notifyActivate, notifyAtRest) {\n    for (var i = 0, len = this.listeners.length; i < len; i++) {\n      var listener = this.listeners[i];\n\n      if (notifyActivate && listener.onSpringActivate) {\n        listener.onSpringActivate(this);\n      }\n\n      if (listener.onSpringUpdate) {\n        listener.onSpringUpdate(this);\n      }\n\n      if (notifyAtRest && listener.onSpringAtRest) {\n        listener.onSpringAtRest(this);\n      }\n    }\n  };\n\n  /**\n   * Check if the SpringSystem should advance. Springs are advanced\n   * a final frame after they reach equilibrium to ensure that the\n   * currentValue is exactly the requested endValue regardless of the\n   * displacement threshold.\n   * @public\n   */\n\n\n  Spring.prototype.systemShouldAdvance = function systemShouldAdvance() {\n    return !this.isAtRest() || !this.wasAtRest();\n  };\n\n  Spring.prototype.wasAtRest = function wasAtRest() {\n    return this._wasAtRest;\n  };\n\n  /**\n   * Check if the Spring is atRest meaning that it's currentValue and\n   * endValue are the same and that it has no velocity. The previously\n   * described thresholds for speed and displacement define the bounds\n   * of this equivalence check. If the Spring has 0 tension, then it will\n   * be considered at rest whenever its absolute velocity drops below the\n   * restSpeedThreshold.\n   * @public\n   */\n\n\n  Spring.prototype.isAtRest = function isAtRest() {\n    return Math.abs(this._currentState.velocity) < this._restSpeedThreshold && (this.getDisplacementDistanceForState(this._currentState) <= this._displacementFromRestThreshold || this._springConfig.tension === 0);\n  };\n\n  Spring.prototype._interpolate = function _interpolate(alpha) {\n    this._currentState.position = this._currentState.position * alpha + this._previousState.position * (1 - alpha);\n    this._currentState.velocity = this._currentState.velocity * alpha + this._previousState.velocity * (1 - alpha);\n  };\n\n  Spring.prototype.addListener = function addListener(newListener) {\n    this.listeners.push(newListener);\n    return this;\n  };\n\n  Spring.prototype.removeListener = function removeListener(listenerToRemove) {\n    removeFirst(this.listeners, listenerToRemove);\n    return this;\n  };\n\n  return Spring;\n}();\n\nSpring._ID = 0;\nSpring.MAX_DELTA_TIME_SEC = 0.064;\nSpring.SOLVER_TIMESTEP_SEC = 0.001;\n\nexport default Spring;","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n//\n/**\n *  Copyright (c) 2013, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\nimport { AnimationLooper } from \"./Loopers\";\nimport Spring from \"./Spring\";\nimport { removeFirst } from \"./util\";\n\n/**\n * A set of Springs that all run on the same physics\n * timing loop. To get started with a Rebound animation, first\n * create a new SpringSystem and then add springs to it.\n * @public\n */\n\nvar SpringSystem = function () {\n  function SpringSystem(looper) {\n    _classCallCheck(this, SpringSystem);\n\n    this.looper = looper || new AnimationLooper();\n    this.looper.springSystem = this;\n\n    this.listeners = [];\n    this._activeSprings = [];\n    this._idleSpringIndices = [];\n    this._isIdle = true;\n    this._lastTimeMillis = -1;\n    this._springRegistry = {};\n  }\n\n  /**\n   * Add a new spring to this SpringSystem. This Spring will now be solved for\n   * during the physics iteration loop. By default the spring will use the\n   * default Origami spring config with 40 tension and 7 friction, but you can\n   * also provide your own values here.\n   * @public\n   */\n\n\n  SpringSystem.prototype.createSpring = function createSpring(tension, friction) {\n    return this.createSpringWithConfig({ tension: tension, friction: friction });\n  };\n  /**\n   * Add a spring with the provided SpringConfig.\n   * @public\n   */\n\n\n  SpringSystem.prototype.createSpringWithConfig = function createSpringWithConfig(springConfig) {\n    var spring = new Spring(this);\n    this.registerSpring(spring);\n    spring.setSpringConfig(springConfig);\n    return spring;\n  };\n\n  /**\n   * Check if a SpringSystem is idle or active. If all of the Springs in the\n   * SpringSystem are at rest, i.e. the physics forces have reached equilibrium,\n   * then this method will return true.\n   * @public\n   */\n\n\n  SpringSystem.prototype.getIsIdle = function getIsIdle() {\n    return this._isIdle;\n  };\n\n  /**\n   * Manually add a spring to this system. This is called automatically\n   * if a Spring is created with SpringSystem#createSpring.\n   *\n   * This method sets the spring up in the registry so that it can be solved\n   * in the solver loop.\n   * @public\n   */\n\n\n  SpringSystem.prototype.registerSpring = function registerSpring(spring) {\n    this._springRegistry[spring.getId()] = spring;\n  };\n\n  /**\n   * Deregister a spring with this SpringSystem. The SpringSystem will\n   * no longer consider this Spring during its integration loop once\n   * this is called. This is normally done automatically for you when\n   * you call Spring#destroy.\n   * @public\n   */\n\n\n  SpringSystem.prototype.deregisterSpring = function deregisterSpring(spring) {\n    removeFirst(this._activeSprings, spring);\n    delete this._springRegistry[spring.getId()];\n  };\n\n  SpringSystem.prototype.advance = function advance(time, deltaTime) {\n    while (this._idleSpringIndices.length > 0) {\n      this._idleSpringIndices.pop();\n    }\n    for (var i = 0, len = this._activeSprings.length; i < len; i++) {\n      var spring = this._activeSprings[i];\n      // note from alex: had to add this otherwise deleting springs caused errors\n      if (!spring) return;\n      if (spring.systemShouldAdvance()) {\n        spring.advance(time / 1000.0, deltaTime / 1000.0);\n      } else {\n        this._idleSpringIndices.push(this._activeSprings.indexOf(spring));\n      }\n    }\n    while (this._idleSpringIndices.length > 0) {\n      var idx = this._idleSpringIndices.pop();\n      idx >= 0 && this._activeSprings.splice(idx, 1);\n    }\n  };\n\n  /**\n   * This is the main solver loop called to move the simulation\n   * forward through time. Before each pass in the solver loop\n   * onBeforeIntegrate is called on an any listeners that have\n   * registered themeselves with the SpringSystem. This gives you\n   * an opportunity to apply any constraints or adjustments to\n   * the springs that should be enforced before each iteration\n   * loop. Next the advance method is called to move each Spring in\n   * the systemShouldAdvance forward to the current time. After the\n   * integration step runs in advance, onAfterIntegrate is called\n   * on any listeners that have registered themselves with the\n   * SpringSystem. This gives you an opportunity to run any post\n   * integration constraints or adjustments on the Springs in the\n   * SpringSystem.\n   * @public\n   */\n\n\n  SpringSystem.prototype.loop = function loop(currentTimeMillis) {\n    var listener = void 0;\n    if (this._lastTimeMillis === -1) {\n      this._lastTimeMillis = currentTimeMillis - 1;\n    }\n    var ellapsedMillis = currentTimeMillis - this._lastTimeMillis;\n    this._lastTimeMillis = currentTimeMillis;\n\n    var i = 0;\n    var len = this.listeners.length;\n    for (i = 0; i < len; i++) {\n      listener = this.listeners[i];\n      listener.onBeforeIntegrate && listener.onBeforeIntegrate(this);\n    }\n\n    this.advance(currentTimeMillis, ellapsedMillis);\n    if (this._activeSprings.length === 0) {\n      this._isIdle = true;\n      this._lastTimeMillis = -1;\n    }\n\n    for (i = 0; i < len; i++) {\n      listener = this.listeners[i];\n      listener.onAfterIntegrate && listener.onAfterIntegrate(this);\n    }\n\n    if (!this._isIdle) {\n      this.looper.run();\n    }\n  };\n\n  /**\n   * Used to notify the SpringSystem that a Spring has become displaced.\n   * The system responds by starting its solver loop up if it is currently idle.\n   */\n\n\n  SpringSystem.prototype.activateSpring = function activateSpring(springId) {\n    var spring = this._springRegistry[springId];\n    if (this._activeSprings.indexOf(spring) === -1) {\n      this._activeSprings.push(spring);\n    }\n    if (this.getIsIdle()) {\n      this._isIdle = false;\n      this.looper.run();\n    }\n  };\n\n  return SpringSystem;\n}();\n\nexport default SpringSystem;","import { SpringSystem } from \"../../forked-rebound\";\n\n// this should get created only 1x\nvar springSystem = new SpringSystem();\n\nexport var createSuspendedSpring = function createSuspendedSpring(_ref) {\n  var _ref$springConfig = _ref.springConfig,\n      stiffness = _ref$springConfig.stiffness,\n      damping = _ref$springConfig.damping,\n      overshootClamping = _ref$springConfig.overshootClamping,\n      noOp = _ref.noOp,\n      onSpringActivate = _ref.onSpringActivate,\n      getOnUpdateFunc = _ref.getOnUpdateFunc,\n      onAnimationEnd = _ref.onAnimationEnd;\n\n  if (noOp) return;\n  var spring = springSystem.createSpring(stiffness, damping);\n  spring.setOvershootClampingEnabled(!!overshootClamping);\n  spring.addListener({\n    onSpringActivate: onSpringActivate,\n    onSpringUpdate: getOnUpdateFunc(spring.destroy.bind(spring)),\n    onSpringAtRest: function onSpringAtRest() {\n      // prevent SpringSystem from caching unused springs\n      spring.destroy();\n      onAnimationEnd();\n    }\n  });\n  return spring;\n};\n\nexport var createSpring = function createSpring(flipped) {\n  var spring = createSuspendedSpring(flipped);\n  if (spring) spring.setEndValue(1);else {\n    // even if it was a noop,\n    // we still need to call onSpringActivate in case it calls\n    // cascading flip initiation functions\n    flipped.onSpringActivate();\n  }\n};\n\nexport var staggeredSprings = function staggeredSprings(flippedArray) {\n  var staggerConfig = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (!flippedArray || !flippedArray.length) return;\n\n  if (staggerConfig.reverse) flippedArray.reverse();\n\n  var normalizedSpeed = staggerConfig.speed ? 1 + Math.max(Math.min(staggerConfig.speed, 0), 1) : 1.1;\n\n  var nextThreshold = 1 / Math.max(Math.min(flippedArray.length, 100), 10);\n\n  var springFuncs = flippedArray.filter(function (flipped) {\n    return !flipped.noOp;\n  }).map(function (flipped, i) {\n    var cachedGetOnUpdate = flipped.getOnUpdateFunc;\n\n    // modify the update function to adjust\n    // the end value of the trailing Flipped component\n    flipped.getOnUpdateFunc = function (stop) {\n      var onUpdate = cachedGetOnUpdate(stop);\n      return function (spring) {\n        var currentValue = spring.getCurrentValue();\n        if (currentValue > nextThreshold) {\n          springFuncs[i + 1] && springFuncs[i + 1].setEndValue(Math.min(currentValue * normalizedSpeed, 1));\n        }\n        // now call the actual update function\n        onUpdate(spring);\n      };\n    };\n    return flipped;\n  }).map(function (flipped) {\n    return createSuspendedSpring(flipped);\n  });\n\n  springFuncs[0] && springFuncs[0].setEndValue(1);\n};","import { createSpring, staggeredSprings } from \"./spring\";\n\nvar initiateImmediateAnimations = function initiateImmediateAnimations(immediate) {\n  if (!immediate) return;\n  immediate.forEach(function (flipped) {\n    createSpring(flipped);\n    initiateImmediateAnimations(flipped.immediate);\n  });\n};\n\nexport var createCallTree = function createCallTree(_ref) {\n  var flipDict = _ref.flipDict,\n      topLevelChildren = _ref.topLevelChildren,\n      initiateStaggeredAnimations = _ref.initiateStaggeredAnimations;\n\n  //build a data struct to run the springs\n  var tree = {\n    root: {\n      staggeredChildren: {},\n      immediateChildren: []\n    }\n\n    // helper function to build the nested structure\n  };var appendChild = function appendChild(parent, childId) {\n    var flipData = flipDict[childId];\n    // might have been filtered (e.g. because it was off screen)\n    if (!flipData) return;\n\n    if (flipData.stagger) {\n      parent.staggeredChildren[flipData.stagger] ? parent.staggeredChildren[flipData.stagger].push(flipData) : parent.staggeredChildren[flipData.stagger] = [flipData];\n    } else parent.immediateChildren.push(flipData);\n\n    // only when the spring is first activated, activate the child animations as well\n    // this enables nested stagger\n    flipData.onSpringActivate = function () {\n      initiateImmediateAnimations(flipData.immediateChildren);\n      initiateStaggeredAnimations(flipData.staggeredChildren);\n    };\n\n    flipData.staggeredChildren = {};\n    flipData.immediateChildren = [];\n\n    flipData.childIds.forEach(function (childId) {\n      return appendChild(flipData, childId);\n    });\n  };\n\n  // create the nested structure\n  topLevelChildren.forEach(function (c) {\n    appendChild(tree.root, c);\n  });\n\n  return tree;\n};\n\nexport default (function (_ref2) {\n  var staggerConfig = _ref2.staggerConfig,\n      flipDict = _ref2.flipDict,\n      topLevelChildren = _ref2.topLevelChildren;\n\n  var initiateStaggeredAnimations = function initiateStaggeredAnimations(staggered) {\n    if (!staggered || !Object.keys(staggered).length) return;\n    Object.keys(staggered).forEach(function (staggerKey) {\n      return staggeredSprings(staggered[staggerKey], staggerConfig[staggerKey]);\n    });\n  };\n\n  var tree = createCallTree({\n    flipDict: flipDict,\n    topLevelChildren: topLevelChildren,\n    initiateStaggeredAnimations: initiateStaggeredAnimations\n  });\n\n  initiateImmediateAnimations(tree.root.immediateChildren);\n  initiateStaggeredAnimations(tree.root.staggeredChildren);\n});","import * as Rematrix from \"rematrix\";\nimport { getSpringConfig } from \"../../springSettings\";\nimport { toArray, isFunction, isNumber, getDuplicateValsAsStrings, assign } from \"../../utilities\";\nimport * as constants from \"../../constants\";\nimport filterFlipDescendants from \"./filterFlipDescendants\";\nimport initiateAnimations from \"./initiateAnimations\";\n\n// 3d transforms were causing weird issues in chrome,\n// especially when opacity was also being tweened,\n// so convert to a 2d matrix\nexport var convertMatrix3dArrayTo2dArray = function convertMatrix3dArrayTo2dArray(matrix) {\n  return [0, 1, 4, 5, 12, 13].map(function (index) {\n    return matrix[index];\n  });\n};\n\nexport var convertMatrix2dArrayToString = function convertMatrix2dArrayToString(matrix) {\n  return \"matrix(\" + matrix.join(\", \") + \")\";\n};\n\nexport var invertTransformsForChildren = function invertTransformsForChildren(_ref) {\n  var invertedChildren = _ref.invertedChildren,\n      matrix = _ref.matrix,\n      body = _ref.body;\n\n  invertedChildren.forEach(function (_ref2) {\n    var child = _ref2[0],\n        childFlipConfig = _ref2[1];\n\n    if (!body.contains(child)) {\n      return;\n    }\n    var scaleX = matrix[0];\n    var scaleY = matrix[3];\n    var translateX = matrix[4];\n    var translateY = matrix[5];\n\n    var inverseVals = { translateX: 0, translateY: 0, scaleX: 1, scaleY: 1 };\n    var transformString = \"\";\n    if (childFlipConfig.translate) {\n      inverseVals.translateX = -translateX / scaleX;\n      inverseVals.translateY = -translateY / scaleY;\n      transformString += \"translate(\" + inverseVals.translateX + \"px, \" + inverseVals.translateY + \"px)\";\n    }\n    if (childFlipConfig.scale) {\n      inverseVals.scaleX = 1 / scaleX;\n      inverseVals.scaleY = 1 / scaleY;\n      transformString += \" scale(\" + inverseVals.scaleX + \", \" + inverseVals.scaleY + \")\";\n    }\n    child.style.transform = transformString;\n  });\n};\n\nexport var createApplyStylesFunc = function createApplyStylesFunc(_ref3) {\n  var element = _ref3.element,\n      invertedChildren = _ref3.invertedChildren,\n      body = _ref3.body;\n  return function (_ref4) {\n    var matrix = _ref4.matrix,\n        opacity = _ref4.opacity,\n        forceMinVals = _ref4.forceMinVals;\n\n    if (isNumber(opacity)) {\n      element.style.opacity = opacity;\n    }\n\n    if (forceMinVals) {\n      element.style.minHeight = \"1px\";\n      element.style.minWidth = \"1px\";\n    }\n\n    if (!matrix) return;\n    var stringTransform = convertMatrix2dArrayToString(matrix);\n\n    // keep a tiny, (hopefully) invisible rotateZ transform on the element to try to\n    // prevent Chrome from pixel-snapping when scale transforms\n    // are removed\n    stringTransform = stringTransform === \"matrix(1, 0, 0, 1, 0, 0)\" ? \"matrix(1, 0.00001, -0.00001, 1, 0, 0)\" : stringTransform;\n    element.style.transform = stringTransform;\n\n    if (invertedChildren) {\n      invertTransformsForChildren({\n        invertedChildren: invertedChildren,\n        matrix: matrix,\n        body: body\n      });\n    }\n  };\n};\n\nexport var rectInViewport = function rectInViewport(_ref5) {\n  var top = _ref5.top,\n      bottom = _ref5.bottom,\n      left = _ref5.left,\n      right = _ref5.right;\n\n  return top < window.innerHeight && bottom > 0 && left < window.innerWidth && right > 0;\n};\n\nvar getInvertedChildren = function getInvertedChildren(element, id) {\n  return toArray(element.querySelectorAll(\"[\" + constants.DATA_INVERSE_FLIP_ID + \"=\\\"\" + id + \"\\\"]\"));\n};\n\nexport var tweenProp = function tweenProp(start, end, position) {\n  return start + (end - start) * position;\n};\n\nvar animateFlippedElements = function animateFlippedElements(_ref6) {\n  var flippedIds = _ref6.flippedIds,\n      flipCallbacks = _ref6.flipCallbacks,\n      inProgressAnimations = _ref6.inProgressAnimations,\n      cachedFlipChildrenPositions = _ref6.cachedFlipChildrenPositions,\n      newFlipChildrenPositions = _ref6.newFlipChildrenPositions,\n      applyTransformOrigin = _ref6.applyTransformOrigin,\n      spring = _ref6.spring,\n      getElement = _ref6.getElement,\n      debug = _ref6.debug,\n      staggerConfig = _ref6.staggerConfig,\n      decisionData = _ref6.decisionData,\n      scopedSelector = _ref6.scopedSelector;\n\n  var body = document.querySelector(\"body\");\n\n  // the stuff below is used so we can return a promise that resolves when all FLIP animations have\n  // completed\n  var closureResolve = void 0;\n  var flipCompletedPromise = new Promise(function (resolve, reject) {\n    closureResolve = resolve;\n  });\n  var withInitFuncs = void 0;\n  var completedAnimationIds = [];\n\n  if (debug) {\n    // eslint-disable-next-line no-console\n    console.error('[react-flip-toolkit]\\nThe \"debug\" prop is set to true. All FLIP animations will return at the beginning of the transition.');\n  }\n\n  var duplicateFlipIds = getDuplicateValsAsStrings(flippedIds);\n  if (duplicateFlipIds.length) {\n    // eslint-disable-next-line no-console\n    console.error(\"[react-flip-toolkit]\\nThere are currently multiple elements with the same flipId on the page.\\nThe animation will only work if each Flipped component has a unique flipId.\\nDuplicate flipId\" + (duplicateFlipIds.length > 1 ? \"s\" : \"\") + \": \" + duplicateFlipIds.join(\"\\n\"));\n  }\n\n  var flipDataArray = flippedIds\n  // take all the measurements we need\n  // and return an object with animation functions + necessary data\n  .map(function (id) {\n    var prevRect = cachedFlipChildrenPositions[id].rect;\n    var currentRect = newFlipChildrenPositions[id].rect;\n    var prevOpacity = cachedFlipChildrenPositions[id].opacity;\n    var currentOpacity = newFlipChildrenPositions[id].opacity;\n    var needsForcedMinVals = currentRect.width < 1 || currentRect.height < 1;\n\n    // don't animate elements outside of the user's viewport\n    if (!rectInViewport(prevRect) && !rectInViewport(currentRect)) {\n      return false;\n    }\n    // it's never going to be visible, so dont animate it\n    if (prevRect.width === 0 && currentRect.width === 0 || prevRect.height === 0 && currentRect.height === 0) {\n      return false;\n    }\n\n    var element = getElement(id);\n\n    // this might happen if we are rapidly adding & removing elements(?)\n    if (!element) return false;\n\n    var flipConfig = JSON.parse(element.dataset.flipConfig);\n\n    var springConfig = getSpringConfig({\n      flipperSpring: spring,\n      flippedSpring: flipConfig.spring\n    });\n\n    var stagger = flipConfig.stagger === true ? \"default\" : flipConfig.stagger;\n\n    var toReturn = {\n      element: element,\n      id: id,\n      stagger: stagger,\n      springConfig: springConfig,\n      noOp: true\n    };\n\n    if (flipCallbacks[id] && flipCallbacks[id].shouldFlip) {\n      var elementShouldFlip = flipCallbacks[id].shouldFlip(decisionData.prev, decisionData.current);\n      // this element wont be animated, but its children might be\n      if (!elementShouldFlip) return toReturn;\n    }\n\n    // don't animate elements that didn't change\n    // but we might want to animate children\n    if (prevRect.left === currentRect.left && prevRect.top === currentRect.top && prevRect.width === currentRect.width && prevRect.height === currentRect.height && prevOpacity === currentOpacity) {\n      // this element wont be animated, but its children might be\n      return toReturn;\n    }\n\n    toReturn.noOp = false;\n\n    var currentTransform = Rematrix.parse(newFlipChildrenPositions[id].transform);\n\n    var toVals = { matrix: currentTransform };\n\n    var fromVals = {};\n    var transformsArray = [currentTransform];\n\n    // we're only going to animate the values that the child wants animated\n    if (flipConfig.translate) {\n      transformsArray.push(Rematrix.translateX(prevRect.left - currentRect.left));\n      transformsArray.push(Rematrix.translateY(prevRect.top - currentRect.top));\n    }\n    // going any smaller than 1px breaks transitions in Chrome\n    if (flipConfig.scale) {\n      transformsArray.push(Rematrix.scaleX(Math.max(prevRect.width, 1) / Math.max(currentRect.width, 1)));\n      transformsArray.push(Rematrix.scaleY(Math.max(prevRect.height, 1) / Math.max(currentRect.height, 1)));\n    }\n\n    if (flipConfig.opacity) {\n      fromVals.opacity = prevOpacity;\n      toVals.opacity = currentOpacity;\n    }\n\n    var invertedChildren = [];\n\n    if (!flipCallbacks[id] || !flipCallbacks[id].shouldInvert || flipCallbacks[id].shouldInvert(decisionData.prev, decisionData.current)) {\n      invertedChildren = getInvertedChildren(element, id).map(function (c) {\n        return [c, JSON.parse(c.dataset.flipConfig)];\n      });\n    }\n\n    fromVals.matrix = convertMatrix3dArrayTo2dArray(transformsArray.reduce(Rematrix.multiply));\n\n    toVals.matrix = convertMatrix3dArrayTo2dArray(toVals.matrix);\n\n    var applyStyles = createApplyStylesFunc({\n      element: element,\n      invertedChildren: invertedChildren,\n      body: body\n    });\n\n    var onComplete = void 0;\n    if (flipCallbacks[id] && flipCallbacks[id].onComplete) {\n      // must cache or else this could cause an error\n      var cachedOnComplete = flipCallbacks[id].onComplete;\n      onComplete = function onComplete() {\n        return cachedOnComplete(element, decisionData.prev, decisionData.current);\n      };\n    }\n\n    // this should be called when animation ends naturally\n    // but also when it is interrupted\n    // when it is called, the animation has already been cancelled\n    var onAnimationEnd = function onAnimationEnd() {\n      delete inProgressAnimations[id];\n      isFunction(onComplete) && onComplete();\n      if (needsForcedMinVals && element) {\n        element.style.minHeight = \"\";\n        element.style.minWidth = \"\";\n      }\n      completedAnimationIds.push(id);\n\n      if (completedAnimationIds.length >= withInitFuncs.length) {\n        // we can theoretically call multiple times since a promise only resolves 1x\n        // but that shouldnt happen\n        closureResolve();\n      }\n    };\n\n    var animateOpacity = isNumber(fromVals.opacity) && fromVals.opacity !== toVals.opacity;\n\n    var onStartCalled = false;\n\n    var getOnUpdateFunc = function getOnUpdateFunc(stop) {\n      inProgressAnimations[id] = {\n        stop: stop,\n        onComplete: onComplete\n      };\n      return function (spring) {\n        //trigger the user provided onStart function\n        if (!onStartCalled) {\n          onStartCalled = true;\n          if (flipCallbacks[id] && flipCallbacks[id].onStart) flipCallbacks[id].onStart(element, decisionData.prev, decisionData.current);\n        }\n\n        var currentValue = spring.getCurrentValue();\n\n        if (!body.contains(element)) {\n          stop();\n          return;\n        }\n\n        var vals = {};\n\n        vals.matrix = fromVals.matrix.map(function (fromVal, index) {\n          return tweenProp(fromVal, toVals.matrix[index], currentValue);\n        });\n\n        if (animateOpacity) {\n          vals.opacity = tweenProp(fromVals.opacity, toVals.opacity, currentValue);\n        }\n        applyStyles(vals);\n      };\n    };\n\n    var initializeFlip = function initializeFlip() {\n      // before animating, immediately apply FLIP styles to prevent flicker\n      applyStyles({\n        matrix: fromVals.matrix,\n        opacity: animateOpacity && fromVals.opacity,\n        forceMinVals: needsForcedMinVals\n      });\n      // and batch any other style updates if necessary\n      if (flipConfig.transformOrigin) {\n        element.style.transformOrigin = flipConfig.transformOrigin;\n      } else if (applyTransformOrigin) {\n        element.style.transformOrigin = \"0 0\";\n      }\n\n      invertedChildren.forEach(function (_ref7) {\n        var child = _ref7[0],\n            childFlipConfig = _ref7[1];\n\n        if (childFlipConfig.transformOrigin) {\n          child.style.transformOrigin = childFlipConfig.transformOrigin;\n        } else if (applyTransformOrigin) {\n          child.style.transformOrigin = \"0 0\";\n        }\n      });\n    };\n\n    return assign({}, toReturn, {\n      stagger: stagger,\n      springConfig: springConfig,\n      getOnUpdateFunc: getOnUpdateFunc,\n      initializeFlip: initializeFlip,\n      onAnimationEnd: onAnimationEnd\n    });\n  }).filter(function (x) {\n    return x;\n  });\n\n  // we use this array to compare with completed animations\n  // to decide when all animations are completed\n  withInitFuncs = flipDataArray.filter(function (_ref8) {\n    var initializeFlip = _ref8.initializeFlip;\n    return Boolean(initializeFlip);\n  });\n  //  put items back in place\n  withInitFuncs.forEach(function (_ref9) {\n    var initializeFlip = _ref9.initializeFlip;\n    return initializeFlip();\n  });\n\n  if (debug) return;\n\n  var flipDict = flipDataArray.reduce(function (acc, curr) {\n    acc[curr.id] = curr;\n    return acc;\n  }, {});\n\n  // this function modifies flipDataArray in-place\n  // by removing references to non-direct children\n  // to enable recursive stagger\n\n  var _filterFlipDescendant = filterFlipDescendants({\n    flipDict: flipDict,\n    flippedIds: flippedIds,\n    scopedSelector: scopedSelector\n  }),\n      topLevelChildren = _filterFlipDescendant.topLevelChildren;\n\n  return function () {\n    // there are no active FLIP animations, so immediately resolve the\n    // returned promise\n    if (!withInitFuncs.length) closureResolve();\n    initiateAnimations({ topLevelChildren: topLevelChildren, flipDict: flipDict, staggerConfig: staggerConfig });\n    return flipCompletedPromise;\n  };\n};\n\nexport default animateFlippedElements;","import { toArray, assign } from \"../../utilities\";\nimport * as constants from \"../../constants\";\n\nvar cancelInProgressAnimations = function cancelInProgressAnimations(inProgressAnimations) {\n  Object.keys(inProgressAnimations).forEach(function (id) {\n    if (inProgressAnimations[id].stop) inProgressAnimations[id].stop();\n    delete inProgressAnimations[id];\n  });\n};\n\nvar addTupleToObject = function addTupleToObject(acc, curr) {\n  var _assign;\n\n  return assign(acc, (_assign = {}, _assign[curr[0]] = curr[1], _assign));\n};\n\nexport var getAllElements = function getAllElements(element, portalKey) {\n  if (portalKey) {\n    return toArray(document.querySelectorAll(\"[\" + constants.DATA_PORTAL_KEY + \"=\\\"\" + portalKey + \"\\\"]\"));\n  } else {\n    return toArray(element.querySelectorAll(\"[\" + constants.DATA_FLIP_ID + \"]\"));\n  }\n};\n\n/**\n * Called in getSnapshotBeforeUpdate in the Flipped Component\n * @param {Object} args\n * @param {HTMLElement} args.element - the ref for the parent Flipper component\n * @param {Object} args.flipCallbacks - passed in solely to identify which\n * elements have onExit callbacks, and cache their dom elements appropriately\n * @param {Object} args.inProgressAnimations - stop callbacks for currently in\n * progress animations\n * @returns {Object} flippedElementPositions\n */\nexport var getFlippedElementPositionsBeforeUpdate = function getFlippedElementPositionsBeforeUpdate(_ref) {\n  var element = _ref.element,\n      _ref$flipCallbacks = _ref.flipCallbacks,\n      flipCallbacks = _ref$flipCallbacks === undefined ? {} : _ref$flipCallbacks,\n      _ref$inProgressAnimat = _ref.inProgressAnimations,\n      inProgressAnimations = _ref$inProgressAnimat === undefined ? {} : _ref$inProgressAnimat,\n      portalKey = _ref.portalKey;\n\n  var flippedElements = getAllElements(element, portalKey);\n\n  var inverseFlippedElements = toArray(element.querySelectorAll(\"[\" + constants.DATA_INVERSE_FLIP_ID + \"]\"));\n\n  var childIdsToParentBCRs = {};\n  var parentBCRs = [];\n  var childIdsToParents = {};\n  // this is for exit animations so we can re-insert exiting elements in the\n  // DOM later\n  flippedElements.filter(function (el) {\n    return flipCallbacks && flipCallbacks[el.dataset.flipId] && flipCallbacks[el.dataset.flipId].onExit;\n  }).forEach(function (el) {\n    var parent = el.parentNode;\n    // this won't work for IE11\n    if (el.closest) {\n      var exitContainer = el.closest(\"[\" + constants.DATA_EXIT_CONTAINER + \"]\");\n      if (exitContainer) parent = exitContainer;\n    }\n    var bcrIndex = parentBCRs.findIndex(function (n) {\n      return n[0] === parent;\n    });\n    if (bcrIndex === -1) {\n      parentBCRs.push([parent, parent.getBoundingClientRect()]);\n      bcrIndex = parentBCRs.length - 1;\n    }\n    childIdsToParentBCRs[el.dataset.flipId] = parentBCRs[bcrIndex][1];\n    childIdsToParents[el.dataset.flipId] = parent;\n  });\n\n  var flippedElementPositions = flippedElements.map(function (child) {\n    var domData = {};\n    var childBCR = child.getBoundingClientRect();\n\n    // only cache extra data for exit animations\n    // if the element has an onExit listener\n    if (flipCallbacks && flipCallbacks[child.dataset.flipId] && flipCallbacks[child.dataset.flipId].onExit) {\n      var parentBCR = childIdsToParentBCRs[child.dataset.flipId];\n\n      assign(domData, {\n        element: child,\n        parent: childIdsToParents[child.dataset.flipId],\n        childPosition: {\n          top: childBCR.top - parentBCR.top,\n          left: childBCR.left - parentBCR.left,\n          width: childBCR.width,\n          height: childBCR.height\n        }\n      });\n    }\n\n    return [child.dataset.flipId, {\n      rect: childBCR,\n      opacity: parseFloat(window.getComputedStyle(child).opacity),\n      domData: domData\n    }];\n  }).reduce(addTupleToObject, {});\n\n  // do this at the very end since we want to cache positions of elements\n  // while they are mid-transition\n  cancelInProgressAnimations(inProgressAnimations);\n\n  flippedElements.concat(inverseFlippedElements).forEach(function (el) {\n    el.style.transform = \"\";\n    el.style.opacity = \"\";\n  });\n  return {\n    flippedElementPositions: flippedElementPositions,\n    cachedOrderedFlipIds: flippedElements.map(function (el) {\n      return el.dataset.flipId;\n    })\n  };\n};\n\n/**\n * This function is called in onFlipKeyUpdate\n * (which is called in the Flipper component's componentDidUpdate)\n * @param {HTMLElement} args.element - the ref for the parent Flipper component\n * @returns {Object} flippedElementPositions\n */\nexport var getFlippedElementPositionsAfterUpdate = function getFlippedElementPositionsAfterUpdate(_ref2) {\n  var element = _ref2.element,\n      portalKey = _ref2.portalKey;\n\n  return getAllElements(element, portalKey).map(function (child) {\n    var computedStyle = window.getComputedStyle(child);\n    var rect = child.getBoundingClientRect();\n    return [child.dataset.flipId, {\n      rect: rect,\n      opacity: parseFloat(computedStyle.opacity),\n      domData: {},\n      transform: computedStyle.transform\n    }];\n  }).reduce(addTupleToObject, {});\n};","import animateUnflippedElements from \"./animateUnflippedElements\";\nimport animateFlippedElements from \"./animateFlippedElements\";\nimport { getFlippedElementPositionsAfterUpdate } from \"./getFlippedElementPositions\";\nimport * as constants from \"../constants\";\nimport { assign } from \"../utilities\";\n\nvar createScopedSelector = function createScopedSelector(element, portalKey) {\n  if (portalKey) {\n    return function (selector) {\n      return document.querySelectorAll(\"[\" + constants.DATA_PORTAL_KEY + \"=\" + portalKey + \"]\" + selector);\n    };\n  } else {\n    return function (selector) {\n      return element.querySelectorAll(selector);\n    };\n  }\n};\n\nvar createGetElementFunc = function createGetElementFunc(element, portalKey) {\n  // this should only ever return 1 element\n  return function (id) {\n    return createScopedSelector(element, portalKey)(\"[\" + constants.DATA_FLIP_ID + \"=\\\"\" + id + \"\\\"]\")[0];\n  };\n};\n\nvar onFlipKeyUpdate = function onFlipKeyUpdate(_ref) {\n  var _ref$cachedOrderedFli = _ref.cachedOrderedFlipIds,\n      cachedOrderedFlipIds = _ref$cachedOrderedFli === undefined ? [] : _ref$cachedOrderedFli,\n      _ref$inProgressAnimat = _ref.inProgressAnimations,\n      inProgressAnimations = _ref$inProgressAnimat === undefined ? {} : _ref$inProgressAnimat,\n      _ref$cachedFlipChildr = _ref.cachedFlipChildrenPositions,\n      cachedFlipChildrenPositions = _ref$cachedFlipChildr === undefined ? {} : _ref$cachedFlipChildr,\n      _ref$flipCallbacks = _ref.flipCallbacks,\n      flipCallbacks = _ref$flipCallbacks === undefined ? {} : _ref$flipCallbacks,\n      containerEl = _ref.containerEl,\n      applyTransformOrigin = _ref.applyTransformOrigin,\n      spring = _ref.spring,\n      debug = _ref.debug,\n      portalKey = _ref.portalKey,\n      _ref$staggerConfig = _ref.staggerConfig,\n      staggerConfig = _ref$staggerConfig === undefined ? {} : _ref$staggerConfig,\n      _ref$decisionData = _ref.decisionData,\n      decisionData = _ref$decisionData === undefined ? {} : _ref$decisionData,\n      handleEnterUpdateDelete = _ref.handleEnterUpdateDelete;\n\n  var newFlipChildrenPositions = getFlippedElementPositionsAfterUpdate({\n    element: containerEl,\n    portalKey: portalKey\n  });\n\n  var scopedSelector = createScopedSelector(containerEl, portalKey);\n  var getElement = createGetElementFunc(containerEl, portalKey);\n\n  var isFlipped = function isFlipped(id) {\n    return cachedFlipChildrenPositions[id] && newFlipChildrenPositions[id];\n  };\n\n  var unflippedIds = Object.keys(cachedFlipChildrenPositions).concat(Object.keys(newFlipChildrenPositions)).filter(function (id) {\n    return !isFlipped(id);\n  });\n\n  var baseArgs = {\n    flipCallbacks: flipCallbacks,\n    getElement: getElement,\n    cachedFlipChildrenPositions: cachedFlipChildrenPositions,\n    newFlipChildrenPositions: newFlipChildrenPositions,\n    inProgressAnimations: inProgressAnimations\n  };\n\n  var _animateUnflippedElem = animateUnflippedElements(assign({}, baseArgs, {\n    unflippedIds: unflippedIds\n  })),\n      hideEnteringElements = _animateUnflippedElem.hideEnteringElements,\n      animateEnteringElements = _animateUnflippedElem.animateEnteringElements,\n      animateExitingElements = _animateUnflippedElem.animateExitingElements;\n\n  var flippedIds = cachedOrderedFlipIds.filter(isFlipped);\n  var animateFlippedElementsArgs = assign({}, baseArgs, {\n    flippedIds: flippedIds,\n    applyTransformOrigin: applyTransformOrigin,\n    spring: spring,\n    debug: debug,\n    staggerConfig: staggerConfig,\n    decisionData: decisionData,\n    scopedSelector: scopedSelector\n  });\n\n  // the function handles putting flipped elements back in their original positions\n  // and returns another function to actually call flip\n  var flip = animateFlippedElements(animateFlippedElementsArgs);\n\n  if (handleEnterUpdateDelete) {\n    handleEnterUpdateDelete({\n      hideEnteringElements: hideEnteringElements,\n      animateEnteringElements: animateEnteringElements,\n      animateExitingElements: animateExitingElements,\n      animateFlippedElements: flip\n    });\n  } else {\n    hideEnteringElements();\n    animateExitingElements().then(animateEnteringElements);\n    flip();\n  }\n};\n\nexport default onFlipKeyUpdate;","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport React, { Component, createContext } from \"react\";\nimport PropTypes from \"prop-types\";\nimport onFlipKeyUpdate from \"./flip\";\nimport { getFlippedElementPositionsBeforeUpdate } from \"./flip/getFlippedElementPositions\";\n\nexport var FlipContext = createContext(\"flip\");\nexport var PortalContext = createContext(\"portal\");\n\nvar Flipper = function (_Component) {\n  _inherits(Flipper, _Component);\n\n  function Flipper(props) {\n    _classCallCheck(this, Flipper);\n\n    var _this = _possibleConstructorReturn(this, _Component.call(this, props));\n\n    _this.inProgressAnimations = {};\n    _this.flipCallbacks = {};\n    return _this;\n  }\n\n  Flipper.prototype.getSnapshotBeforeUpdate = function getSnapshotBeforeUpdate(prevProps) {\n    if (prevProps.flipKey !== this.props.flipKey) {\n      return getFlippedElementPositionsBeforeUpdate({\n        element: this.el,\n        // if onExit callbacks exist here, we'll cache the DOM node\n        flipCallbacks: this.flipCallbacks,\n        inProgressAnimations: this.inProgressAnimations,\n        portalKey: this.props.portalKey\n      });\n    }\n    return null;\n  };\n\n  Flipper.prototype.componentDidUpdate = function componentDidUpdate(prevProps, prevState, cachedData) {\n    if (this.props.flipKey !== prevProps.flipKey) {\n      onFlipKeyUpdate({\n        cachedFlipChildrenPositions: cachedData.flippedElementPositions,\n        cachedOrderedFlipIds: cachedData.cachedOrderedFlipIds,\n        containerEl: this.el,\n        inProgressAnimations: this.inProgressAnimations,\n        flipCallbacks: this.flipCallbacks,\n        applyTransformOrigin: this.props.applyTransformOrigin,\n        spring: this.props.spring,\n        debug: this.props.debug,\n        portalKey: this.props.portalKey,\n        staggerConfig: this.props.staggerConfig,\n        handleEnterUpdateDelete: this.props.handleEnterUpdateDelete,\n        decisionData: {\n          prev: prevProps.decisionData,\n          current: this.props.decisionData\n        }\n      });\n    }\n  };\n\n  Flipper.prototype.render = function render() {\n    var _this2 = this;\n\n    var _props = this.props,\n        element = _props.element,\n        className = _props.className,\n        portalKey = _props.portalKey;\n\n    var Element = element;\n\n    return React.createElement(\n      PortalContext.Provider,\n      { value: portalKey },\n      React.createElement(\n        FlipContext.Provider,\n        { value: this.flipCallbacks },\n        React.createElement(\n          Element,\n          { className: className, ref: function ref(el) {\n              return _this2.el = el;\n            } },\n          this.props.children\n        )\n      )\n    );\n  };\n\n  return Flipper;\n}(Component);\n\nFlipper.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  flipKey: PropTypes.any,\n  children: PropTypes.node.isRequired,\n  spring: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  applyTransformOrigin: PropTypes.bool,\n  debug: PropTypes.bool,\n  element: PropTypes.string,\n  className: PropTypes.string,\n  portalKey: PropTypes.string,\n  staggerConfig: PropTypes.object,\n  decisionData: PropTypes.any,\n  handleEnterUpdateDelete: PropTypes.func\n} : {};\n\nFlipper.defaultProps = {\n  applyTransformOrigin: true,\n  element: \"div\"\n};\n\nexport default Flipper;","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nimport React, { Component, Children, cloneElement } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { FlipContext, PortalContext } from \"./Flipper\";\nimport * as constants from \"./constants\";\nimport { assign, isObject } from \"./utilities\";\n\nvar customPropCheck = function customPropCheck(props, propName) {\n  if (props.flipId && props.inverseFlipId) {\n    return new Error('Please only provide one of the two: \"FlipId\" or \"inverseFlipID\"');\n  } else if (props.flipId === undefined && props.inverseFlipId === undefined) {\n    return new Error(\"Must provide either a \\\"FlipId\\\" or an \\\"InverseFlipId\\\" prop\");\n  } else if (props[propName] && typeof props[propName] !== \"string\") {\n    return new Error(propName + \" must be a string\");\n  }\n};\n\nvar propTypes = {\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.func]).isRequired,\n  inverseFlipId: customPropCheck,\n  flipId: customPropCheck,\n  opacity: PropTypes.bool,\n  translate: PropTypes.bool,\n  scale: PropTypes.bool,\n  transformOrigin: PropTypes.string,\n  spring: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  onStart: PropTypes.func,\n  onComplete: PropTypes.func,\n  onAppear: PropTypes.func,\n  shouldFlip: PropTypes.func,\n  shouldInvert: PropTypes.func,\n  onExit: PropTypes.func,\n  portalKey: PropTypes.string,\n  stagger: PropTypes.oneOfType([PropTypes.string, PropTypes.bool])\n  // This wrapper creates child components for the main Flipper component\n};export function Flipped(_ref) {\n  var _dataAttributes;\n\n  var children = _ref.children,\n      flipId = _ref.flipId,\n      inverseFlipId = _ref.inverseFlipId,\n      portalKey = _ref.portalKey,\n      rest = _objectWithoutProperties(_ref, [\"children\", \"flipId\", \"inverseFlipId\", \"portalKey\"]);\n\n  var child = children;\n  var isFunctionAsChildren = typeof child === 'function';\n\n  if (!isFunctionAsChildren) {\n    try {\n      child = Children.only(children);\n    } catch (e) {\n      throw new Error(\"Each Flipped component must wrap a single child\");\n    }\n  }\n\n  // if nothing is being animated, assume everything is being animated\n  if (!rest.scale && !rest.translate && !rest.opacity) {\n    assign(rest, {\n      translate: true,\n      scale: true,\n      opacity: true\n    });\n  }\n\n  var dataAttributes = (_dataAttributes = {}, _dataAttributes[constants.DATA_FLIP_ID] = flipId, _dataAttributes[constants.DATA_INVERSE_FLIP_ID] = inverseFlipId, _dataAttributes[constants.DATA_FLIP_CONFIG] = JSON.stringify(rest), _dataAttributes);\n\n  if (portalKey) {\n    dataAttributes[constants.DATA_PORTAL_KEY] = portalKey;\n  }\n\n  return isFunctionAsChildren ? child(dataAttributes) : cloneElement(child, dataAttributes);\n}\n\nvar FlippedWithContext = function (_Component) {\n  _inherits(FlippedWithContext, _Component);\n\n  function FlippedWithContext() {\n    _classCallCheck(this, FlippedWithContext);\n\n    return _possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  FlippedWithContext.prototype.render = function render() {\n    var _props = this.props,\n        children = _props.children,\n        flipId = _props.flipId,\n        shouldFlip = _props.shouldFlip,\n        shouldInvert = _props.shouldInvert,\n        onAppear = _props.onAppear,\n        onStart = _props.onStart,\n        onComplete = _props.onComplete,\n        onExit = _props.onExit,\n        rest = _objectWithoutProperties(_props, [\"children\", \"flipId\", \"shouldFlip\", \"shouldInvert\", \"onAppear\", \"onStart\", \"onComplete\", \"onExit\"]);\n\n    if (rest.inverseFlipId) return React.createElement(\n      Flipped,\n      rest,\n      children\n    );\n    return React.createElement(\n      PortalContext.Consumer,\n      null,\n      function (portalKey) {\n        return React.createElement(\n          FlipContext.Consumer,\n          null,\n          function (data) {\n            // if there is no surrounding Flipper component,\n            // we don't want to throw an error, so check\n            // that data exists and is not the default string\n            if (isObject(data)) {\n              data[flipId] = {\n                shouldFlip: shouldFlip,\n                shouldInvert: shouldInvert,\n                onAppear: onAppear,\n                onStart: onStart,\n                onComplete: onComplete,\n                onExit: onExit\n              };\n            }\n            return React.createElement(\n              Flipped,\n              _extends({ flipId: flipId }, rest, { portalKey: portalKey }),\n              children\n            );\n          }\n        );\n      }\n    );\n  };\n\n  return FlippedWithContext;\n}(Component);\n\nFlippedWithContext.propTypes = process.env.NODE_ENV !== \"production\" ? propTypes : {};\n\nexport default FlippedWithContext;","import Flipper from \"./Flipper\";\nimport Flipped from \"./Flipped\";\nimport ExitContainer from \"./ExitContainer\";\n\n// for umd build\nexport default {\n  Flipper: Flipper,\n  Flipped: Flipped,\n  ExitContainer: ExitContainer\n};\n\nexport { default as Flipper } from \"./Flipper\";\nexport { default as Flipped } from \"./Flipped\";\nexport { default as ExitContainer } from \"./ExitContainer\";"],"sourceRoot":""}