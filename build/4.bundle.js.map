{"version":3,"sources":["app/components/About/styles.ts","app/components/About/index.tsx","app/components/Footer/styles.ts","app/components/Footer/index.tsx"],"names":["AboutWrapper","styled_components_browser_esm","div","templateObject_1","__makeTemplateObject","theme","fonts","primary","Tagline","templateObject_2","Content","templateObject_3","Section","section","templateObject_4","props","skills","SectionTitle","templateObject_5","colors","blue","SectionBody","templateObject_6","Skills","templateObject_7","Skill","templateObject_8","padding","SkillTitle","templateObject_9","black","__webpack_exports__","react","_a","mounted","onMount","document","title","esm","window","scrollTo","href","target","rel","Footer","IconListItem","li","Container","fixed","white","Wrapper","Links","Link","a","Text","sendAnalytics","site","category","action","label","Date","getFullYear","role","aria-label","onClick","className"],"mappings":"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","file":"4.bundle.js","sourcesContent":["import styled from 'styled-components';\r\nimport theme from '../../theme';\r\n\r\ninterface SectionProps {\r\n    skills?: boolean;\r\n}\r\n\r\ninterface SkillProps {\r\n    padding?: boolean;\r\n}\r\n\r\nconst AboutWrapper = styled.div`\r\n    font-family: ${theme.fonts.primary};\r\n`;\r\n\r\nconst Tagline = styled.div`\r\n    padding: 100px;\r\n    font-weight: 300;\r\n    max-width: 700px;\r\n    font-size: 2.5rem;\r\n    line-height: 1.5;\r\n\r\n    @media (max-width: 1199px) and (min-width: 1024px) {\r\n        padding: 150px 100px;\r\n    }\r\n\r\n    @media (max-width: 768px) {\r\n        padding: 125px 20px 45px;\r\n        font-size: 2rem;\r\n        border-bottom: 1px solid rgb(219, 219, 219);\r\n    }\r\n`;\r\n\r\nconst Content = styled.div`\r\n    padding: 85px;\r\n    margin: 0 auto;\r\n\r\n    @media (max-width: 1199px) and (min-width: 1024px) {\r\n        display: block;\r\n        padding: 0;\r\n    }\r\n\r\n    @media (max-width: 1023px) {\r\n        display: block;\r\n        padding: 0;\r\n    }\r\n\r\n    @media (max-width: 768px) {\r\n        padding: 0;\r\n    }\r\n`;\r\n\r\nconst Section = styled.section`\r\n    padding: 80px 170px;\r\n    display: flex;\r\n    justify-content: center;\r\n\r\n    @media (max-width: 1199px) and (min-width: 1024px) {\r\n        padding: 0 130px 70px;\r\n        justify-content: center;\r\n    }\r\n\r\n    @media (max-width: 1023px) {\r\n        justify-content: center;\r\n    }\r\n\r\n    @media (max-width: 768px) {\r\n        padding: 50px 20px ${(props: SectionProps) => (props.skills ? '100px' : 0)};\r\n        display: block;\r\n    }\r\n`;\r\n\r\nconst SectionTitle = styled.div`\r\n    text-align: right;\r\n    margin-right: 70px;\r\n    font-size: 16px;\r\n    color: ${theme.colors.blue};\r\n    width: 200px;\r\n    font-weight: 700;\r\n    letter-spacing: 2px;\r\n\r\n    @media (max-width: 768px) {\r\n        text-align: left;\r\n    }\r\n`;\r\n\r\nconst SectionBody = styled.div`\r\n    font-size: 1rem;\r\n    line-height: 2;\r\n    width: 100%;\r\n    max-width: 650px;\r\n\r\n    a {\r\n        font-weight: 700;\r\n\r\n        &:hover {\r\n            color: ${theme.colors.blue};\r\n        }\r\n    }\r\n\r\n    @media (max-width: 768px) {\r\n        width: unset;\r\n        padding: 15px 20px;\r\n    }\r\n`;\r\n\r\nconst Skills = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n\r\n    @media (max-width: 768px) {\r\n        display: block;\r\n    }\r\n`;\r\n\r\nconst Skill = styled.div`\r\n    ul {\r\n        list-style: none;\r\n        padding: 0;\r\n        margin: 0;\r\n\r\n        li {\r\n            margin: 3px 0;\r\n            font-size: 0.9rem;\r\n        }\r\n    }\r\n\r\n    @media (max-width: 768px) {\r\n        display: inline-block;\r\n        vertical-align: text-top;\r\n        width: 50%;\r\n        margin-top: ${(props: SkillProps) => (props.padding ? '10px' : 0)};\r\n    }\r\n`;\r\n\r\nconst SkillTitle = styled.div`\r\n    font-weight: 700;\r\n    color: ${theme.colors.black};\r\n    text-transform: uppercase;\r\n`;\r\n\r\nexport {\r\n    Skill,\r\n    SkillTitle,\r\n    Section,\r\n    SectionBody,\r\n    SectionTitle,\r\n    Skills,\r\n    Content,\r\n    Tagline,\r\n    AboutWrapper\r\n};\r\n","import * as React from 'react';\r\nimport * as ReactGA from 'react-ga';\r\nimport {\r\n    Skill,\r\n    SkillTitle,\r\n    Section,\r\n    SectionBody,\r\n    SectionTitle,\r\n    Skills,\r\n    Content,\r\n    Tagline,\r\n    AboutWrapper\r\n} from './styles';\r\n// Components\r\nimport Footer from '../Footer';\r\n\r\nfunction About() {\r\n    const [mounted, onMount] = React.useState(false);\r\n\r\n    React.useEffect(\r\n        () => {\r\n            if (!mounted) {\r\n                document.title = 'Emile Choghi';\r\n\r\n                if (NODE_ENV === 'production') {\r\n                    // @ts-ignore\r\n                    ReactGA.ga('send', 'pageview', '/');\r\n                }\r\n\r\n                window.scrollTo(0, 0);\r\n                onMount(true);\r\n            }\r\n        },\r\n        [mounted]\r\n    );\r\n\r\n    return (\r\n        <AboutWrapper>\r\n            <Content>\r\n                <Tagline>\r\n                    I'm <b>Emile Choghi</b>, a design-oriented front end software engineer focused\r\n                    on building beautiful interfaces & experiences\r\n                </Tagline>\r\n                <Section>\r\n                    <SectionTitle>Background</SectionTitle>\r\n                    <SectionBody>\r\n                        I'm currently a front end engineer at{' '}\r\n                        <a href=\"https://doctor.com\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                            Doctor.com\r\n                        </a>{' '}\r\n                        building consumer facing web apps with some awesome people. As an engineer,\r\n                        I enjoy exploring the complex relationship between engineering and design â€”\r\n                        combining my technical expertise with my keen attention to detail to create\r\n                        beautiful products. My goal is to always build applications that are\r\n                        scalable and efficient under the hood while providing seamless,\r\n                        pixel-perfect user experiences. When I'm not in front of a computer screen,\r\n                        I'm probably playing basketball, flying my drones, or hanging out at the\r\n                        beach.\r\n                    </SectionBody>\r\n                </Section>\r\n                <Section skills>\r\n                    <SectionTitle>Skills</SectionTitle>\r\n                    <SectionBody>\r\n                        <Skills>\r\n                            <Skill>\r\n                                <SkillTitle>Languages</SkillTitle>\r\n                                <ul>\r\n                                    <li>Javascript (ES6)</li>\r\n                                    <li>HTML</li>\r\n                                    <li>CSS</li>\r\n                                </ul>\r\n                            </Skill>\r\n                            <Skill>\r\n                                <SkillTitle>Libraries</SkillTitle>\r\n                                <ul>\r\n                                    <li>React</li>\r\n                                    <li>AngularJS</li>\r\n                                    <li>jQuery</li>\r\n                                    <li>Bootstrap</li>\r\n                                    <li>Node & Express</li>\r\n                                </ul>\r\n                            </Skill>\r\n                            <Skill padding>\r\n                                <SkillTitle>Tools</SkillTitle>\r\n                                <ul>\r\n                                    <li>Git & Github</li>\r\n                                    <li>Webpack</li>\r\n                                    <li>Gulp</li>\r\n                                    <li>VS Code</li>\r\n                                    <li>PHP Storm</li>\r\n                                </ul>\r\n                            </Skill>\r\n                            <Skill padding>\r\n                                <SkillTitle>Design</SkillTitle>\r\n                                <ul>\r\n                                    <li>Adobe Photoshop</li>\r\n                                    <li>Zeplin</li>\r\n                                    <li>Invision</li>\r\n                                </ul>\r\n                            </Skill>\r\n                        </Skills>\r\n                    </SectionBody>\r\n                </Section>\r\n            </Content>\r\n\r\n            <Footer />\r\n        </AboutWrapper>\r\n    );\r\n}\r\n\r\nexport default React.memo(About);\r\n","import styled from 'styled-components';\r\nimport theme from '../../theme';\r\n\r\ninterface ContainerProps {\r\n    fixed?: boolean;\r\n}\r\n\r\nconst IconListItem = styled.li`\r\n    display: inline-block;\r\n    list-style: none;\r\n    display: inline-block;\r\n    vertical-align: sub;\r\n`;\r\n\r\nconst Container = styled.div`\r\n    display: none;\r\n    position: ${(props: ContainerProps) => (props.fixed ? 'fixed' : 'relative')};\r\n    background: ${theme.colors.white};\r\n    font-family: ${theme.fonts.primary};\r\n    height: 80px;\r\n    width: 100%;\r\n    bottom: 0;\r\n    box-shadow: 0 -1px 5px rgba(0, 0, 0, 0.1);\r\n    overflow: hidden;\r\n\r\n    @media (max-width: 1023px) {\r\n        display: block;\r\n        position: relative;\r\n    }\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n    height: 100%;\r\n    position: relative;\r\n    margin: 0 110px;\r\n    box-sizing: border-box;\r\n\r\n    @media (max-width: 1199px) and (min-width: 1024px) {\r\n        margin: 0 auto;\r\n        padding: 0 30px;\r\n        width: 80%;\r\n    }\r\n\r\n    @media (max-width: 1023px) {\r\n        margin: 0 auto;\r\n        padding: 0 30px;\r\n        width: 85%;\r\n        height: 75px;\r\n    }\r\n`;\r\n\r\nconst Links = styled.div`\r\n    position: absolute;\r\n    display: inline-block;\r\n    box-sizing: border-box;\r\n    padding: 20px 0;\r\n    width: fit-content;\r\n    top: 0;\r\n    right: 0;\r\n    line-height: 40px;\r\n    text-align: right;\r\n    float: right;\r\n\r\n    @media (max-width: 1023px) {\r\n        padding: 17.5px 0;\r\n    }\r\n`;\r\n\r\nconst Link = styled.a`\r\n    display: inline-flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    flex: 0 0 auto;\r\n    width: 48px;\r\n    color: rgba(0, 0, 0, 0.54);\r\n    height: 48px;\r\n    padding: 0;\r\n    font-size: 1.5rem;\r\n    text-align: center;\r\n    transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,\r\n        box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\r\n    text-decoration: none;\r\n    border-radius: 50%;\r\n    background-color: transparent;\r\n    appearance: none;\r\n    -webkit-tap-highlight-color: transparent;\r\n    user-select: none;\r\n    outline: none;\r\n\r\n    &:hover {\r\n        background-color: rgba(0, 0, 0, 0.08);\r\n    }\r\n\r\n    i {\r\n        font-size: 20px;\r\n        cursor: pointer;\r\n        transition: opacity 0.2s;\r\n\r\n        &:hover {\r\n            opacity: 0.8;\r\n        }\r\n    }\r\n`;\r\n\r\nconst Text = styled.div`\r\n    position: absolute;\r\n    display: inline-block;\r\n    box-sizing: border-box;\r\n    padding: 20px 0;\r\n    width: fit-content;\r\n    top: 0;\r\n    right: 0;\r\n    line-height: 40px;\r\n    font-size: 16px;\r\n    text-align: left;\r\n    float: left;\r\n    left: 0;\r\n`;\r\n\r\nexport { IconListItem, Container, Wrapper, Links, Link, Text };\r\n","import * as React from 'react';\r\nimport * as ReactGA from 'react-ga';\r\nimport { IconListItem, Container, Wrapper, Links, Link, Text } from './styles';\r\n\r\nfunction sendAnalytics(site: string) {\r\n    if (NODE_ENV === 'production') {\r\n        ReactGA.event({\r\n            category: 'Footer Link',\r\n            action: 'Social Media Link Click',\r\n            label: `Navigated to ${site} Profile`\r\n        });\r\n    }\r\n}\r\n\r\ninterface FooterProps {\r\n    fixed?: boolean;\r\n}\r\n\r\nconst Footer: React.FunctionComponent<FooterProps> = ({ fixed }) => (\r\n    <Container fixed={fixed}>\r\n        <Wrapper>\r\n            <Text>Â© {new Date().getFullYear()} Emile Choghi</Text>\r\n            <Links>\r\n                <IconListItem>\r\n                    <Link\r\n                        role=\"button\"\r\n                        aria-label=\"github\"\r\n                        href=\"https://github.com/echoghi\"\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                        onClick={() => sendAnalytics('Github')}\r\n                    >\r\n                        <i className=\"icon-github\" />\r\n                    </Link>\r\n                </IconListItem>\r\n                <IconListItem>\r\n                    <Link\r\n                        role=\"button\"\r\n                        aria-label=\"linked in\"\r\n                        href=\"https://www.linkedin.com/in/emile-choghi-a6b60ba1/\"\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                        onClick={() => sendAnalytics('LinkedIn')}\r\n                    >\r\n                        <i className=\"icon-linkedin\" />\r\n                    </Link>\r\n                </IconListItem>\r\n                <IconListItem>\r\n                    <Link\r\n                        role=\"button\"\r\n                        aria-label=\"angel list\"\r\n                        href=\"https://angel.co/emile-choghi\"\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                        onClick={() => sendAnalytics('Angellist')}\r\n                    >\r\n                        <i className=\"icon-angel\" />\r\n                    </Link>\r\n                </IconListItem>\r\n            </Links>\r\n        </Wrapper>\r\n    </Container>\r\n);\r\n\r\nexport default Footer;\r\n"],"sourceRoot":""}